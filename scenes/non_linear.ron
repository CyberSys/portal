(desc:(eng:"We already know that uniformly moving portal can add that uniform speed to the teleported object, and this is consistent with the Newton\'s first law. But what about accelerated portal? Will that acceleration work at distance?\n\nWith blue object portal transfer its acceleration to the object without touching it. This can be called \"action at a distance\". I didn\'t like that variant, but it more consistent.\n\nWith red object acceleration transefered to the object only when object is touching portal\'s surface, when touching ends object is moving staight forward and with constant speed. I like that variant because there is no action at a distance. But this variant is bad because now we declare that teleportation surface is real thing, and we can measure it.\n\nWhich variant do you prefer?",rus:"Мы уже знаем что двигающийся прямолинейно и равномерно портал может задавать скорость объекту, который он телепортирует, и это соотносится с Первым Законом Ньютона. А что насчёт ускоренно двигающегося портала? Будет ли это ускоренное движение передаваться всё время, или только в момент когда объект касается поверхности телепортации?\n\nСинему объекту портал передаёт своё ускорение, не касаясь его. Это можно назвать дальнодействие\". Мне этот вариант не нравится, но он более естественный.\n\nКрасному объекту передаётся ускорение только когда он касается поверхности портала, после того как касание прекращается, объект движется прямолинейно и равномерно, вращаясь вокруг собственной оси. Это можно назвать \"локальное действие\". Мне этот вариант нравится. Но этот вариант плох тем что из-за него портальная поверхность становится не абстрактной концепцией, а реальной вещью, которую можно измерить.\n\nА какой вариант предпочитаете вы?"),cam:(look_at:(0,0,0),alpha:1.6658926296891639,beta:0.9854308700561537,r:3.500000000000033,offset_after_material:0.000025),uniforms:(ids:(available:[],max:32),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:8)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Formula(("if(angle > -alpha, 1, 0)")),"is_touch"),(9):Named(Formula(("-my_time*pi()+alpha*2")),"angle"),(10):Named(Bool(false),"variant"),(11):Named(Formula(("2.5-2.5*cos(alpha)")),"x_offset"),(12):Inline(Bool(false)),(13):Named(Bool(false),"cylinder_enable"),(14):Named(Formula(("((time % 10) * time_speed) % 1")),"my_time"),(15):Inline(Formula(("2.5 + if(is_touch, 0, x_param * object_time)"))),(16):Inline(Formula(("-2.5 + if(is_touch, 0, x_param * object_time)"))),(17):Inline(Formula(("if(is_touch, 0, object_time * rotation_param)"))),(18):Named(Formula(("my_time*pi()-alpha*2")),"object_time"),(19):Inline(Formula(("and(inv(is_touch), 1)"))),(20):Inline(Formula(("-speed*sin(alpha)*object_time+x_offset"))),(21):Inline(Formula(("-speed*cos(alpha)*object_time"))),(22):Inline(Formula(("angle"))),(23):Named(Formula(("11.53/180*pi()")),"alpha"),(24):Named(Bool(false),"mirror"),(25):Named(Float((min:Some(0.1),max:Some(1),value:0.30000000000000004)),"time_speed"),(26):Named(Float((min:None,max:None,value:1)),"cylinder_height"),(27):Named(Formula(("2.5")),"speed"),(28):Named(Float((min:None,max:None,value:3.5)),"cylinder_radius"),(29):Named(Progress(0.5),"cylinder_progress"),(30):Named(Float((min:None,max:None,value:1.5)),"cylinder_radius2"),(31):Inline(Bool(true))},storage_order:[(0),(1),(2),(6),(7),(9),(14),(18),(8),(23),(27),(11),(10),(24),(25),(13),(26),(28),(29),(30)]),matrices:(ids:(available:[],max:43),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Mul(to:Some(((18))),what:Some(((17)))),"a"),(14):Named(Simple(offset:(-2.5,-2.5,-2.5),scale:1,rotate:(0,3.141592653589793,0),mirror:(false,false,false)),"b"),(15):Named(If(condition:Yes(Some(((19)))),then:Some(((20))),otherwise:Some(((21)))),"tr"),(16):Named(Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((15)))),"tr_teleported"),(17):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(-2.5)),rotate:(x:No(0),y:Yes(Some(((9)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(18):Inline(Simple(offset:(2.5,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(19):Inline(Simple(offset:(0,0,0),scale:0.5,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(20):Inline(Mul(to:Some(((22))),what:Some(((13))))),(21):Inline(Simple(offset:(2.5,0,-2.5),scale:0.5,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(22):Inline(Parametrized(offset:(x:Yes(Some(((20)))),y:No(0),z:Yes(Some(((21))))),rotate:(x:No(1.5707963267948966),y:No(0),z:Yes(Some(((22))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(0.5))),(23):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(24):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(25):Named(Simple(offset:(2.5,0,-2.5),scale:0.5,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),"tr2"),(26):Named(Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((25)))),"tr2_teleported"),(27):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(28):Named(Simple(offset:(-2.5,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(true,false,false)),"cylinder1"),(29):Inline(Mul(to:Some(((28))),what:Some(((13))))),(30):Inline(Mul(to:Some(((28))),what:Some(((14))))),(31):Inline(Mul(to:Some(((28))),what:Some(((13))))),(32):Inline(Mul(to:Some(((28))),what:Some(((14))))),(33):Named(Simple(offset:(-5,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"cylinder2"),(34):Inline(Mul(to:Some(((33))),what:Some(((13))))),(35):Inline(Mul(to:Some(((33))),what:Some(((14))))),(36):Named(Simple(offset:(-2.5,1,0),scale:1,rotate:(1.5707963267948966,0,1.5707963267948966),mirror:(false,false,false)),"cylinder3"),(37):Inline(Mul(to:Some(((36))),what:Some(((13))))),(38):Inline(Mul(to:Some(((36))),what:Some(((14))))),(39):Named(Simple(offset:(-2.5,-1,0),scale:1,rotate:(1.5707963267948966,0,1.5707963267948966),mirror:(false,false,false)),"cylinder4"),(40):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(41):Inline(Mul(to:Some(((39))),what:Some(((13))))),(42):Inline(Mul(to:Some(((39))),what:Some(((14)))))},storage_order:[(0),(13),(14),(15),(25),(16),(26),(28),(33),(36),(39)]),objects:(ids:(available:[],max:17),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Flat(kind:Simple(Some(((25)))),is_inside:(("if (cylinder_enable_u == 0 && (a_mat_inv * pos).z < 0.) return NOT_INSIDE;\n\nreturn object(x, y, back);"))),"triangle"),(7):Named(Flat(kind:Simple(Some(((16)))),is_inside:(("if (cylinder_enable_u == 1) return NOT_INSIDE;\n\nif ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\n\nreturn object2(x, y, true);"))),"triangle teleported"),(8):Named(Flat(kind:Portal(Some(((13))),Some(((14)))),is_inside:(("float dist = square_distance(x, y);\n\nif (cylinder_enable_u == 1 && dist < 1.0) return NOT_INSIDE;\n\nreturn is_inside_portal(\n  dist, \n  1.0, \n  0.07,\n  0.01,\n  portal_orange_black_M, \n  portal_blue_black_M, \n  grid_gray_M, \n  grid_gray_M, \n  back,\n  first\n);"))),"portal"),(9):Named(Complex(kind:Simple(Some(((13)))),intersect:(("return SceneIntersection(portal_orange_M, cap(r, vec3(-1.2, 0., 0.), vec3(-2.5, 0., 0.), 0.2), false);"))),"engine"),(10):Named(Complex(kind:Simple(Some(((24)))),intersect:(("return SceneIntersection(portal_orange_M, cap(r, vec3(0., 0., -2.5), vec3(0., -4, -2.5), 0.2), false);"))),"engine 2"),(11):Named(Flat(kind:Simple(Some(((26)))),is_inside:(("if (cylinder_enable_u == 1) return NOT_INSIDE;\n\nif ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\n\nreturn object2(x, y, false);"))),"triangle teleported 2"),(12):Named(Complex(kind:Portal(Some(((29))),Some(((30)))),intersect:(("if (cylinder_enable_u == 0) return scene_intersection_none;\n\nint material = TELEPORT;\nif (teleport_light_u == 0) material = grid_gray_M;\n\nreturn intersect_cylinder(r, cylinder_radius_u, cylinder_height_u, cylinder_progress_u, material);"))),"cylinder1"),(13):Named(Complex(kind:Portal(Some(((31))),Some(((32)))),intersect:(("if (cylinder_enable_u == 0) return scene_intersection_none;\n\nint material = TELEPORT;\nif (teleport_light_u == 0) material = grid_gray_M;\n\nreturn intersect_cylinder(r, cylinder_radius2_u, cylinder_height_u, cylinder_progress_u, material);"))),"cylinder2"),(14):Named(Flat(kind:Portal(Some(((34))),Some(((35)))),is_inside:(("float dist = square_distance(x, y);\n\nif (cylinder_enable_u == 0 || dist > 1.0) return NOT_INSIDE;\n\nint material = TELEPORT;\nif (teleport_light_u == 0) material = grid_gray_M;\n\nreturn material;"))),"portal2"),(15):Named(Flat(kind:Portal(Some(((37))),Some(((38)))),is_inside:(("float dist = circle_distance(x, y);\n\nif (cylinder_enable_u == 0 || (dist > 3.5 || dist < 1.5) || x > 0.) return NOT_INSIDE;\n\nint material = TELEPORT;\nif (teleport_light_u == 0) material = grid_gray_M;\n\nreturn material;"))),"portal3"),(16):Named(Flat(kind:Portal(Some(((41))),Some(((42)))),is_inside:(("float dist = circle_distance(x, y);\n\nif (cylinder_enable_u == 0 || (dist > 3.5 || dist < 1.5) || x > 0.) return NOT_INSIDE;\n\nint material = TELEPORT;\nif (teleport_light_u == 0) material = grid_gray_M;\n\nreturn material;"))),"portal4")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)]),cameras:(ids:(available:[],max:3),storage:{(0):Named((look_at:MatrixCenter(Some(((14)))),alpha:-17.52533466446516,beta:1.2350005076676627,r:5.636785000000037),"b"),(1):Named((look_at:MatrixCenter(Some(((16)))),alpha:-17.453188888759566,beta:1.144000360697511,r:2.8925619834710914),"tr"),(2):Named((look_at:MatrixCenter(Some(((26)))),alpha:1.3152097257688473,beta:0.9400768741071351,r:3.8500000000000285),"tr2")},storage_order:[(0),(1),(2)]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:25),storage:{(0):Named(Simple(color:(0.7647179,0.7024815,0.061205085),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.029196177,0.029196177,0.029196177),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8431372549019608,0.07450980392156863,0.07450980392156863),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.18068509,0.18068509,0.18068509),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.11372549019607843,0.26666666666666666,0.9058823529411765),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15478948,0.73873776,0.2186588),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1.16810285e-1, 2.6798066e-1, 9.083436e-1), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black"),(21):Named(Complex(code:(("return material_simple(hit, r, vec3(9.176470588235294e-1, 9.176470588235294e-1, 9.176470588235294e-1) * (PI + atan(hit.u, hit.v))/(2.0*PI), 5e-1, false, 4e0, 3e-1);"))),"solid_white"),(22):Named(Complex(code:(("return material_simple(hit, r, vec3(8.784313725490196e-1, 9.725490196078431e-1, 4.549019607843137e-1) * (PI + atan(hit.u, hit.v))/(2.0*PI), 5e-1, false, 4e0, 3e-1);"))),"solid_yelreen"),(23):Named(Complex(code:(("return material_simple(hit, r, vec3(215.0/255.0, 19.0/255.0, 19.0/255.0) * (PI + atan(hit.u, hit.v))/(2.0*PI), 5e-1, false, 4e0, 3e-1);"))),"solid_red"),(24):Named(Complex(code:(("return material_simple(hit, r, vec3(29.0/255.0, 68.0/255.0, 231.0/255.0) * (PI + atan(hit.u, hit.v))/(2.0*PI), 5e-1, false, 4e0, 3e-1);"))),"solid_blue")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14),(21),(22),(23),(24)]),intersection_materials:(ids:(available:[],max:0),storage:{},storage_order:[]),library:(ids:(available:[],max:6),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(2):Named((("int is_inside_triangle(float x, float y, float angle, float width, float border, int inner_m, int border_m) {\n  float value = width * 0.7 - abs(x)*angle;\n  if (between(border, y, value - border * angle)) {\n    return inner_m;\n  } else if (between(0., y, value)) {\n    return border_m;\n  } else {\n    return NOT_INSIDE;\n  }\n}")),"triangle"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y) {\n  return max(abs(x), abs(y) - 1.);\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"portal"),(4):Named((("int object(float x, float y, bool back) {\n  float value = sqr(x) + sqr(y);\n  if (value < 1.0) {\n    if (value > sqr(1.0 - 0.07)) return solid_black_M;\n    if (back) {\n      return solid_white_M;\n    } else {\n      return solid_yelreen_M;\n    }\n  }\n  return NOT_INSIDE;\n}\n\nint object2(float x, float y, bool type) {\n  float value = sqr(x) + sqr(y);\n  if (value < 1.0) {\n    if (value > sqr(1.0 - 0.07)) return solid_black_M;\n    if (type) {\n      return solid_red_M;\n    } else {\n      return solid_blue_M;\n    }\n  }\n  return NOT_INSIDE;\n}")),"object"),(5):Named((("SceneIntersection intersect_cylinder(Ray r, float radius, float height, float progress, int material) {\r\n  float a = dot(r.d.xy, r.d.xy);\r\n  float b = 2.0 * dot(r.o.xy, r.d.xy);\r\n  float c = dot(r.o.xy, r.o.xy) - sqr(radius);\r\n  float det = b*b - 4.0 * a * c;\r\n\r\n  if (det < 0.) return scene_intersection_none;\r\n\r\n  det = sqrt(det);\r\n\r\n  float t = (-b - det)/(2.*a);\r\n  vec4 pos = r.o + r.d * t;\r\n  float u = atan(pos.y, pos.x) * radius;\r\n  float v = pos.z;\r\n  \r\n  if (t > 0. && abs(v) < height && u / radius + PI < progress * 2. * PI) {\r\n    vec3 n = normalize(vec3(pos.xy, 0.));\r\n    return SceneIntersection(material, SurfaceIntersection(true, t, u, v, n), false);\r\n  }\r\n\r\n  t = (-b + det)/(2.*a);\r\n  pos = r.o + r.d * t;\r\n  u = atan(pos.y, pos.x) * radius;\r\n  v = pos.z;\r\n\r\n  if (t > 0. && abs(v) < height && u / radius + PI < progress * 2. * PI) {\r\n    vec3 n = normalize(vec3(pos.xy, 0.));\r\n    return SceneIntersection(material, SurfaceIntersection(true, t, u, v, n), false);\r\n  }\r\n\r\n  return scene_intersection_none;\r\n}")),"cylinder")},storage_order:[(0),(1),(2),(3),(4),(5)]),animations_filters:(uniforms:({((6)):false,((18)):false,((9)):false,((8)):false,((27)):false,((2)):false,((24)):false,((14)):false,((23)):false,((13)):true,((30)):false,((25)):true,((10)):false,((0)):false,((11)):false,((28)):false,((26)):false,((1)):false,((29)):false,((7)):true}),matrices:({((16)):false,((0)):false,((14)):false,((25)):false,((28)):false,((33)):false,((13)):false,((26)):false,((15)):false,((36)):false,((39)):false}),cameras:({((2)):true,((1)):true,((0)):true})),elements_descriptions:(uniforms:({((7)):(help_description:None,overrided_name:"Teleport light"),((10)):(help_description:None,overrided_name:""),((13)):(help_description:None,overrided_name:""),((25)):(help_description:None,overrided_name:"Time speed")}),matrices:({}),cameras:({((0)):(help_description:None,overrided_name:"Blue portal"),((2)):(help_description:None,overrided_name:"Blue object"),((1)):(help_description:None,overrided_name:"Red object")})),user_uniforms:(uniforms:({((28)):false,((10)):false,((24)):false,((8)):false,((6)):false,((13)):false,((23)):false,((25)):true,((14)):false,((1)):false,((26)):false,((2)):false,((29)):false,((11)):false,((27)):false,((18)):false,((9)):false,((7)):true,((30)):false,((0)):false}),matrices:({((14)):false,((26)):false,((28)):false,((33)):false,((25)):false,((13)):false,((36)):false,((0)):false,((39)):false,((16)):false,((15)):false})),animation_stages:(ids:(available:[],max:2),storage:{(0):Named((name:(eng:"Explore",rus:"Исследование"),description:None,uniforms:({((0)):FromDev,((8)):FromDev,((13)):FromDev,((14)):FromDev,((28)):FromDev,((6)):FromDev,((23)):FromDev,((25)):FromDev,((18)):FromDev,((24)):FromDev,((9)):FromDev,((10)):Changed(Some(((12)))),((27)):FromDev,((11)):FromDev,((7)):FromDev,((1)):FromDev,((2)):FromDev,((26)):FromDev,((29)):FromDev,((30)):FromDev}),matrices:({((0)):FromDev,((26)):FromDev,((14)):FromDev,((16)):FromDev,((15)):FromDev,((33)):FromDev,((36)):FromDev,((39)):FromDev,((25)):FromDev,((28)):FromDev,((13)):FromDev}),original_cam_button:true,set_cam:None,cams:{((0)):true,((2)):true,((1)):true}),"Explore"),(1):Named((name:(eng:"Alternative shape",rus:"Другая форма"),description:None,uniforms:({((24)):FromDev,((0)):FromDev,((6)):FromDev,((13)):Changed(Some(((31)))),((25)):FromDev,((26)):FromDev,((28)):FromDev,((29)):FromDev,((2)):FromDev,((14)):FromDev,((1)):FromDev,((23)):FromDev,((27)):FromDev,((10)):FromDev,((18)):FromDev,((11)):FromDev,((7)):FromDev,((9)):FromDev,((8)):FromDev,((30)):FromDev}),matrices:({((0)):FromDev,((28)):FromDev,((33)):FromDev,((39)):FromDev,((16)):FromDev,((26)):FromDev,((15)):FromDev,((14)):FromDev,((13)):FromDev,((25)):FromDev,((36)):FromDev}),original_cam_button:false,set_cam:None,cams:{((1)):false,((2)):false,((0)):false}),"Alternative shape")},storage_order:[(0),(1)]),current_stage:Some(((0))),dev_stage:(uniforms:({((25)):Float((min:Some(0.1),max:Some(1),value:0.30000000000000004)),((23)):Formula(("11.53/180*pi()")),((30)):Float((min:None,max:None,value:1.5)),((8)):Formula(("if(angle > -alpha, 1, 0)")),((13)):Bool(false),((28)):Float((min:None,max:None,value:3.5)),((29)):Progress(0.5),((10)):Bool(true),((7)):Bool(true),((11)):Formula(("2.5-2.5*cos(alpha)")),((24)):Bool(false),((0)):Float((min:Some(0),max:None,value:4)),((1)):Float((min:Some(0),max:None,value:4)),((9)):Formula(("-my_time*pi()+alpha*2")),((14)):Formula(("((time % 10) * time_speed) % 1")),((27)):Formula(("2.5")),((6)):Progress(0),((2)):Float((min:Some(0),max:None,value:8)),((18)):Formula(("my_time*pi()-alpha*2")),((26)):Float((min:None,max:None,value:1))}),matrices:({((14)):Simple(offset:(-2.5,-2.5,-2.5),scale:1,rotate:(0,3.141592653589793,0),mirror:(false,false,false)),((15)):If(condition:Yes(Some(((19)))),then:Some(((20))),otherwise:Some(((21)))),((13)):Mul(to:Some(((18))),what:Some(((17)))),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((36)):Simple(offset:(-2.5,1,0),scale:1,rotate:(1.5707963267948966,0,1.5707963267948966),mirror:(false,false,false)),((28)):Simple(offset:(-2.5,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(true,false,false)),((26)):Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((25)))),((39)):Simple(offset:(-2.5,-1,0),scale:1,rotate:(1.5707963267948966,0,1.5707963267948966),mirror:(false,false,false)),((25)):Simple(offset:(2.5,0,-2.5),scale:0.5,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),((33)):Simple(offset:(-5,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((16)):Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((15))))})),use_time:true)