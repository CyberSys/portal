(desc:(eng:"This scene shows the greatest discovery in the field of portalology, after the portal in the portal. A small portal is stored FULLY in a large portal, taking space from nowhere.\n\nThis is NOT supposed to work in any way. But it does work. All my understandings of portals have been broken by this discovery.\n\nIt seems to me this discovery should give rise to a new model of portals that will answer a lot of other questions, but I can\'t figure out exactly how to get new information out of it yet. I\'m not Einstein to derive the Theory of Relativity from the mere information that light always travels at a constant speed.\n\nSo hopefully someone will help me with this in the future.\n\nThe discovery was made by a Twitter user with the nickname RoccoLeader on February 15, 2024 in this post: https://twitter.com/RoccoLeader/status/1757976533149589514.",rus:"Эта сцена показывает величайшее открытие в области порталоведения, после порталu в портале. Маленький портал хранится ПОЛНОСТЬЮ в большом портале, беря пространство из ниоткуда.\n\nЭто НЕ ДОЛЖНО работать никак. Но оно работает. Все мои понимания порталов были сломаны этим открытием.\n\nМне кажется это открытие должно дать толчок к новой модели порталов, которая позволит ответить на множество других вопросов, но я пока не могу понять как именно вывести из него новую информацию. Я не Эйнштейн, чтобы из одной лишь информации что свет движется всегда с постоянной скоростью, вывести Теорию Относительности.\n\nТак что надеюсь кто-нибудь мне поможет с этим в будущем.\n\nОткрытие совершил пользователь Твиттера под ником RoccoLeader 15 февраля 2024 года в этом посте: https://twitter.com/RoccoLeader/status/1757976533149589514."),cam:(look_at:(0,0,0),alpha:1.0612392960482848,beta:1.0708823585510276,r:2.7115634177993875,offset_after_material:0.000025),uniforms:(ids:(available:[(6)],max:38),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(7):Named(Bool(true),"teleport_light"),(8):Named(Bool(false),"mirror"),(9):Named(Float((min:None,max:None,value:1)),"scale_z"),(10):Named(Bool(false),"show_object_teleportation"),(11):Named(Float((min:Some(0),max:Some(1.49),value:1.49)),"progress_portal"),(12):Named(Float((min:Some(0),max:Some(10),value:0)),"progress_object"),(13):Named(Bool(false),"enable_object"),(14):Named(Bool(false),"enable_portal_vector"),(15):Named(Bool(false),"enable_object_vector"),(16):Inline(Bool(false)),(17):Inline(Bool(false)),(18):Named(Bool(false),"enable_second_side"),(19):Named(Formula(("1")),"scale_y"),(20):Inline(Float((min:Some(0),max:Some(3),value:0))),(21):Inline(Formula(("0.15"))),(22):Inline(Bool(true)),(23):Inline(Formula(("0.501"))),(24):Inline(Float((min:Some(0),max:Some(6),value:0))),(25):Inline(Formula(("3"))),(26):Inline(Bool(true)),(27):Inline(Float((min:Some(0),max:Some(1.49),value:0))),(28):Inline(Float((min:Some(0.2),max:Some(2.45),value:2.4499999999999997))),(29):Inline(Bool(true)),(30):Inline(Float((min:Some(0),max:Some(3),value:0))),(31):Inline(Bool(true)),(32):Inline(Float((min:Some(0),max:Some(4),value:0))),(33):Inline(Bool(true)),(34):Inline(Bool(false)),(35):Inline(Formula(("1.49"))),(36):Inline(Bool(true)),(37):Inline(Bool(true))},storage_order:[(0),(1),(2),(7),(8),(10),(9),(11),(12),(13),(14),(15),(18),(19)]),matrices:(ids:(available:[],max:51),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"a"),(14):Named(Mul(to:Some(((21))),what:Some(((22)))),"b"),(15):Named(Simple(offset:(0,0,0),scale:0.5,rotate:(0,6.1086523819801535,0),mirror:(false,false,false)),"b_self"),(16):Named(Simple(offset:(0,0,0),scale:0.22,rotate:(0,0,0),mirror:(false,false,false)),"object_self"),(17):Named(Exact(i:(x:No(1),y:No(0),z:No(0)),j:(x:No(0),y:Yes(Some(((19)))),z:No(0)),k:(x:No(0),y:No(0),z:Yes(Some(((9))))),pos:(x:No(0),y:No(0),z:No(0))),"scale_xyz"),(18):Named(Mul(to:Some(((17))),what:Some(((13)))),"a_final"),(19):Named(Mul(to:Some(((17))),what:Some(((14)))),"b_final"),(20):Inline(Parametrized(offset:(x:Yes(Some(((11)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(1),y:No(0),z:No(0)),scale:No(1))),(21):Inline(Mul(to:Some(((15))),what:Some(((20))))),(22):Named(Simple(offset:(0,0,1),scale:1,rotate:(3.141592653589793,4.71238898038469,0),mirror:(false,false,false)),"vector"),(23):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"empty"),(24):Named(Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((19)))),"b_final2"),(25):Inline(Parametrized(offset:(x:Yes(Some(((12)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(26):Named(Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((24)))),"b_final3"),(27):Inline(Mul(to:Some(((19))),what:Some(((19))))),(28):Named(Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((26)))),"b_final4"),(29):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"vector_o"),(30):Named(Mul(to:Some(((16))),what:Some(((25)))),"object"),(31):Inline(Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((32))))),(32):Named(Mul(to:Some(((30))),what:Some(((29)))),"object_final"),(33):Inline(Teleport(first_portal:Some(((19))),second_portal:Some(((18))),what:Some(((32))))),(34):Inline(Teleport(first_portal:Some(((24))),second_portal:Some(((18))),what:Some(((32))))),(35):Inline(Teleport(first_portal:Some(((26))),second_portal:Some(((18))),what:Some(((32))))),(36):Named(Teleport(first_portal:Some(((19))),second_portal:Some(((18))),what:Some(((18)))),"a_final2"),(37):Inline(Simple(offset:(0,0,1),scale:1,rotate:(3.141592653589793,4.71238898038469,0),mirror:(false,false,false))),(38):Named(Teleport(first_portal:Some(((19))),second_portal:Some(((18))),what:Some(((36)))),"a_final3"),(39):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(40):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(41):Inline(Simple(offset:(0,0,0),scale:0.5,rotate:(0,6.1086523819801535,0),mirror:(false,false,false))),(42):Inline(Simple(offset:(0,0,1),scale:1,rotate:(3.141592653589793,4.71238898038469,0),mirror:(false,false,false))),(43):Inline(Simple(offset:(0,0,0),scale:0.5,rotate:(0,6.1086523819801535,0),mirror:(false,false,false))),(44):Inline(Simple(offset:(0,0,1),scale:1,rotate:(3.141592653589793,4.71238898038469,0),mirror:(false,false,false))),(45):Inline(Simple(offset:(0,0,0),scale:0.9,rotate:(0,4.71238898038469,0),mirror:(false,false,false))),(46):Inline(Simple(offset:(0,1.2,-0.5),scale:1,rotate:(0,0,4.71238898038469),mirror:(false,false,false))),(47):Inline(Simple(offset:(0,0,0),scale:0.2,rotate:(1.5707963267948966,3.141592653589793,0),mirror:(false,false,false))),(48):Inline(Simple(offset:(0,0,1),scale:1,rotate:(3.141592653589793,4.71238898038469,0),mirror:(false,false,false))),(49):Inline(Simple(offset:(0,0,0),scale:0.5,rotate:(0,6.1086523819801535,0),mirror:(false,false,false))),(50):Inline(Simple(offset:(0.66,0,1),scale:0.5,rotate:(0,2.0943951023931953,0),mirror:(false,false,false)))},storage_order:[(0),(13),(14),(17),(18),(19),(22),(23),(24),(26),(28),(29),(30),(32),(36),(38),(15),(16)]),objects:(ids:(available:[],max:17),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Complex(kind:Portal(Some(((18))),Some(((19)))),intersect:(("SceneIntersection result = intersect_half_sphere(r, first);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final_mat,\n  vector_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\nif (result.material == grid_gray_M) { result.material = solid_0_M; }\n\nreturn result;"))),"portal1"),(7):Named(Complex(kind:Portal(Some(((18))),Some(((24)))),intersect:(("SceneIntersection result = intersect_half_sphere(r, first);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final_mat,\n  vector_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final2_mat,\n  a_final_to_b_final2_mat_teleport * vector_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\nif (result.material == grid_gray_M) { result.material = solid_1_M; }\n\nreturn result;"))),"portal2"),(8):Named(Complex(kind:Simple(Some(((22)))),intersect:(("if (enable_portal_vector_u == 0) return scene_intersection_none;\n\nreturn intersect_vector(r);"))),"vector"),(9):Named(Complex(kind:Portal(Some(((18))),Some(((26)))),intersect:(("SceneIntersection result = intersect_half_sphere(r, first);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final_mat,\n  vector_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final2_mat,\n  a_final_to_b_final2_mat_teleport * vector_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final3_mat,\n  a_final_to_b_final3_mat_teleport * vector_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\nif (result.material == grid_gray_M) { result.material = solid_2_M; }\n\nreturn result;"))),"portal3"),(10):Named(Complex(kind:Portal(Some(((18))),Some(((28)))),intersect:(("SceneIntersection result = intersect_half_sphere(r, first);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final_mat,\n  vector_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final2_mat,\n  a_final_to_b_final2_mat_teleport * vector_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  b_final3_mat,\n  a_final_to_b_final3_mat_teleport * vector_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nif (result.material == grid_gray_M) { result.material = solid_3_M; }\n\nreturn result;"))),"portal4"),(11):Named(Complex(kind:Simple(Some(((32)))),intersect:(("if (enable_object_u == 0) return scene_intersection_none;\n\nSceneIntersection result = intersect_object(r);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final2_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final3_mat_inv,\n  true,\n  false\n);\n\nreturn result;"))),"object"),(12):Named(Complex(kind:Simple(Some(((29)))),intersect:(("if (enable_object_vector_u == 0) return scene_intersection_none;\n\nif (enable_object_u == 0) return scene_intersection_none;\n\nreturn intersect_vector(r);"))),"vector_o"),(13):Named(Complex(kind:Simple(Some(((31)))),intersect:(("if (enable_object_u == 0) return scene_intersection_none;\n\nSceneIntersection result = intersect_object(r);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  a_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final2_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final3_mat_inv,\n  true,\n  false\n);\n\nif (show_object_teleportation_u == 1) { result.material = solid_0_M; }\n\nreturn result;"))),"object_a"),(14):Named(Complex(kind:Simple(Some(((33)))),intersect:(("if (enable_object_u == 0) return scene_intersection_none;\n\nSceneIntersection result = intersect_object(r);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final2_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final3_mat_inv,\n  true,\n  false\n);\n\nif (show_object_teleportation_u == 1) { result.material = solid_1_M; }\n\nreturn result;"))),"object_b"),(15):Named(Complex(kind:Simple(Some(((34)))),intersect:(("if (enable_object_u == 0) return scene_intersection_none;\n\nSceneIntersection result = intersect_object(r);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\n// I still not quite understand why I need to comment this\n/*result = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final_mat_inv,\n  true,\n  false\n);*/\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final2_mat_inv,\n  true,\n  true\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final3_mat_inv,\n  true,\n  false\n);\n\nif (show_object_teleportation_u == 1) { result.material = solid_2_M; }\n\nreturn result;"))),"object_b2"),(16):Named(Complex(kind:Simple(Some(((35)))),intersect:(("if (enable_object_u == 0) return scene_intersection_none;\n\nSceneIntersection result = intersect_object(r);\n\nif (!result.hit.hit) return scene_intersection_none;\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  a_final_mat_inv,\n  true,\n  false\n);\n\n// I still not quite understand why I need to comment this\n/*result = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final_mat_inv,\n  true,\n  false\n);\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final2_mat_inv,\n  true,\n  false\n);*/\n\nresult = is_pass_through(\n  r,\n  result,\n  object_final_mat,\n  vector_o_mat,\n  b_final3_mat_inv,\n  true,\n  true\n);\n\nif (show_object_teleportation_u == 1) { result.material = solid_3_M; }\n\nreturn result;"))),"object_b3")},storage_order:[(0),(1),(2),(3),(4),(5),(8),(6),(7),(9),(10),(12),(11),(13),(14),(15),(16)]),cameras:(ids:(available:[],max:0),storage:{},storage_order:[]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:19),storage:{(0):Named(Simple(color:(0.7647179,0.7024815,0.061205085),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.029196177,0.029196177,0.029196177),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8458183,0.07454156,0.07454156),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.18068509,0.18068509,0.18068509),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.116810285,0.26798066,0.9083436),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15478948,0.73873776,0.2186588),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1.16810285e-1, 2.6798066e-1, 9.083436e-1), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(7),(17),(8),(9),(10),(18),(11),(12),(13),(14)]),library:(ids:(available:[],max:8),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)));\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y, float a, float b) {\n  return max(abs(x)-a+1., abs(y)-b+1.);\n}\n\nfloat triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance < size) return material_inner;\r\n  if (distance < size + border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"portal"),(4):Named((("SceneIntersection intersect_half_sphere(Ray r, bool first) {\nSceneIntersection result = scene_intersection_none;\n\nint material_border = NOT_INSIDE;\nif (first) { material_border = portal_blue_M;\n} else { material_border = portal_orange_M; }\n\nvec3 normal = -get_normal(empty_mat);\r\nSurfaceIntersection hit = plane_intersect(r, empty_mat_inv, normal);\r\nfloat distance = circle_distance(hit.u, hit.v);\nif (distance > 1.0 && distance < 1.05) {\n  result.hit = hit;\n  result.material = material_border;\n}\n\nvec3 op = -r.o.xyz;\nfloat b = dot(op, r.d.xyz);\nfloat det = b*b - dot(op, op) + 1.0;\nif (det < 0.) return result;\n\ndet = sqrt(det);\nfloat t = b - det;\nvec4 pos = r.o + r.d * t;\nif (pos.z > 0. || t < 0.) t = b + det;\npos = r.o + r.d * t;\nif (pos.z > 0. || t < 0.) return result;\n\nvec3 n = normalize(pos.xyz);\n\nfloat u = atan(pos.z, pos.x);\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\n\nint material = TELEPORT;\nif (teleport_light_u == 0) material = grid_gray_M;\n\nif ((first && dot(n, r.d.xyz) < 0.) || (!first && dot(n, r.d.xyz) > 0.)) {\nif (enable_second_side_u == 0) {\nmaterial = material_border;\n}\n}\n\nSurfaceIntersection hit2 = SurfaceIntersection(true, t, u, v, n);\n\nif ((result.hit.hit && !nearer(hit2, hit)) || !result.hit.hit) {\nresult.hit = hit2;\nresult.material = material;\n}\n\nreturn result;\n}")),"portal2"),(5):Named((("SceneIntersection is_pass_through(\n  Ray r,\n  SceneIntersection result,\n  mat4 object_m,\r\n  mat4 vector_m,\n  mat4 portal_m_inv,\n  bool portal_first,\n  bool teleported_object\n) {\n  if (show_object_teleportation_u == 1) return result;\n\n  vec4 pos = r.o + r.d * result.hit.t;\r\n  vec4 pos_absolute = object_m * pos;\r\n\r\n  vec4 ray_o = vector_m * vec4(0., 0., 0., 1.);\r\n  vec4 ray_d = normalize(pos_absolute-ray_o);\r\n  Ray r2 = Ray(ray_o, ray_d);\r\n\r\n  Ray r_portal = transform(portal_m_inv, r2);\r\n  float len_portal = length(r_portal.d);\r\n  r_portal.d = normalize(r_portal.d);\r\n  SceneIntersection hit_portal = intersect_half_sphere(r_portal, portal_first);\r\n  hit_portal.hit.t /= len_portal;\r\n\r\n  float obj_t = length(pos_absolute - ray_o);\r\n  if ((teleported_object && hit_portal.hit.t > obj_t) || (!teleported_object && hit_portal.hit.t < obj_t)) return scene_intersection_none;\r\n  return result;\n}")),"pass_trough"),(6):Named((("SceneIntersection intersect_object(Ray r) {\nvec3 op = -r.o.xyz;\nfloat b = dot(op, r.d.xyz);\nfloat det = b*b - dot(op, op) + 1.0;\nif (det < 0.) return scene_intersection_none;\n\ndet = sqrt(det);\nfloat t = b - det;\nif (t < 0.) t = b + det;\nif (t < 0.) return scene_intersection_none;\n\nvec4 pos = r.o + r.d * t;\nvec3 n = normalize(pos.xyz);\n\nfloat u = atan(pos.z, pos.x);\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\n\nreturn SceneIntersection(grid_gray_M, SurfaceIntersection(true, t, u, v, n));\n}")),"object"),(7):Named((("SceneIntersection intersect_vector(Ray r) {\nfloat radius = 0.03;\r\n\r\nSurfaceIntersection hit = intersection_none;\r\nSceneIntersection i = SceneIntersection(0, hit);\r\n\r\nhit = cap(r, vec3(0., 0., 0.), vec3(1., 0., 0.), radius);\r\nif (nearer(i, hit)) {\r\n  i.material = DEBUG_RED;\r\n  i.hit = hit;\r\n}\r\n\nhit = cap(r, vec3(1., 0., 0.), vec3(0.9, 0., -0.1), radius);\r\nif (nearer(i, hit)) {\r\n  i.material = DEBUG_RED;\r\n  i.hit = hit;\r\n}\r\n\nhit = cap(r, vec3(1., 0., 0.), vec3(0.9, 0.0, 0.1), radius);\r\nif (nearer(i, hit)) {\r\n  i.material = DEBUG_RED;\r\n  i.hit = hit;\r\n}\r\n\r\nhit = cap(r, vec3(0., -0.2, 0.), vec3(0., 0.2, 0.), radius);\r\nif (nearer(i, hit)) {\r\n  i.material = DEBUG_GREEN;\r\n  i.hit = hit;\r\n}\r\n\r\nhit = cap(r, vec3(0., 0., -0.2), vec3(0., 0., 0.2), radius);\r\nif (nearer(i, hit)) {\r\n  i.material = DEBUG_BLUE;\r\n  i.hit = hit;\r\n}\r\n\r\nreturn i;\n}")),"vector")},storage_order:[(2),(0),(1),(3),(4),(5),(6),(7)]),animations_filters:(uniforms:({((13)):true,((18)):true,((8)):false,((12)):true,((11)):true,((10)):true,((2)):false,((1)):false,((0)):false,((7)):true,((9)):true,((14)):true,((19)):true,((15)):true,((6)):false}),matrices:({((36)):false,((23)):false,((0)):false,((19)):false,((14)):false,((17)):false,((38)):false,((28)):false,((22)):true,((13)):true,((15)):true,((16)):true,((26)):false,((18)):false,((30)):false,((32)):false,((29)):true,((24)):false}),cameras:({})),elements_descriptions:(uniforms:({((11)):(help_description:None,overrided_name:"Portal progress"),((14)):(help_description:None,overrided_name:""),((7)):(help_description:None,overrided_name:"Teleport light"),((15)):(help_description:None,overrided_name:""),((9)):(help_description:None,overrided_name:"Scale sphere"),((10)):(help_description:None,overrided_name:"Disable filtering"),((12)):(help_description:None,overrided_name:"Object progress"),((13)):(help_description:None,overrided_name:""),((18)):(help_description:None,overrided_name:"Enable second side"),((19)):(help_description:None,overrided_name:"Scale to ellipse")}),matrices:({((14)):(help_description:None,overrided_name:""),((22)):(help_description:None,overrided_name:"Portal vector"),((29)):(help_description:None,overrided_name:"Object vector"),((15)):(help_description:None,overrided_name:"Orange portal"),((13)):(help_description:None,overrided_name:""),((16)):(help_description:None,overrided_name:"Object")}),cameras:({})),user_uniforms:(uniforms:({((1)):false,((15)):false,((11)):false,((14)):false,((10)):true,((0)):false,((18)):false,((12)):false,((19)):false,((8)):false,((13)):false,((2)):false,((7)):true,((6)):false,((9)):false}),matrices:({((19)):false,((30)):false,((15)):false,((38)):false,((29)):false,((22)):false,((32)):false,((16)):false,((18)):false,((24)):false,((17)):false,((28)):false,((36)):false,((14)):false,((23)):false,((0)):false,((26)):false,((13)):false})),animation_stages:(ids:(available:[(1)],max:6),storage:{(0):Named((name:(eng:"Flat portals",rus:"Плоские порталы"),description:Some((eng:"Almost flat.\n\nIt just brokes.\n\nDisable light teleportation to understand how that works.",rus:"Почти плоские.\n\nЭто просто ломается.\n\nВыключите телепортацию света чтобы лучше понять как это работает.")),uniforms:({((12)):FromDev,((19)):FromDev,((15)):FromDev,((18)):FromDev,((7)):FromDev,((9)):Changed(Some(((21)))),((2)):FromDev,((10)):FromDev,((11)):ChangedAndToUser(Some(((20)))),((0)):FromDev,((13)):FromDev,((1)):FromDev,((8)):FromDev,((14)):FromDev,((6)):FromDev}),matrices:({((28)):FromDev,((38)):FromDev,((19)):FromDev,((24)):FromDev,((13)):FromDev,((23)):FromDev,((0)):FromDev,((30)):FromDev,((32)):FromDev,((16)):FromDev,((36)):FromDev,((26)):FromDev,((18)):FromDev,((22)):Changed(Some(((37)))),((29)):FromDev,((17)):FromDev,((15)):Changed(Some(((41)))),((14)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"Flat portals"),(2):Named((name:(eng:"Half-spheres",rus:""),description:Some((eng:"WHAT IS THAT??? WHY THIS WORKS??? WHERE DOES IT GET SPACE TO DO THAT?????\n\nDisable light teleportation to understand how that works.\n\nYou can say that this space come from fact that this surface is half-sphered. Now try to enable second side. Now I can\'t tell where does this thing gets space to store that portal INSIDE of the portal.",rus:"ЧТО ЭТО ТАКОЕ??? ПОЧЕМУ ЭТО РАБОТАЕТ??? ОТКУДА ОНО БЕРЁТ ПРОСТРАНСТВО ДЛЯ ЭТОГО???\n\nОтключите телепортацию света чтобы понять как это работает.\n\nВы можете сказать что пространство берётся из полусферического пространства. Но если включить опцию телепортации света второй поверхностью, то уже так нельзя сказать, портал выглядит плоским со всех сторон, везде пространство сохраняет, поэтому теперь откуда он его берёт чтобы хранить другой портал ВНУТРИ портала - не понятно.")),uniforms:({((14)):FromDev,((2)):FromDev,((15)):FromDev,((18)):ProvidedToUser,((8)):FromDev,((19)):FromDev,((10)):FromDev,((11)):ChangedAndToUser(Some(((27)))),((7)):FromDev,((12)):FromDev,((0)):FromDev,((1)):FromDev,((9)):FromDev,((13)):FromDev}),matrices:({((38)):FromDev,((26)):FromDev,((24)):FromDev,((36)):FromDev,((0)):FromDev,((18)):FromDev,((30)):FromDev,((32)):FromDev,((19)):FromDev,((13)):FromDev,((22)):Changed(Some(((42)))),((29)):FromDev,((23)):FromDev,((15)):Changed(Some(((43)))),((14)):FromDev,((17)):FromDev,((16)):FromDev,((28)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"Half-spheres"),(3):Named((name:(eng:"Impossible teleportation",rus:"Невозможная телепортация"),description:None,uniforms:({((12)):FromDev,((13)):FromDev,((14)):FromDev,((18)):ChangedAndToUser(Some(((26)))),((7)):FromDev,((19)):FromDev,((1)):FromDev,((15)):FromDev,((8)):FromDev,((10)):FromDev,((2)):FromDev,((9)):Changed(Some(((25)))),((11)):ChangedAndToUser(Some(((24)))),((0)):FromDev}),matrices:({((32)):FromDev,((14)):FromDev,((36)):FromDev,((15)):Changed(Some(((45)))),((29)):FromDev,((16)):FromDev,((19)):FromDev,((18)):FromDev,((38)):FromDev,((13)):FromDev,((23)):FromDev,((17)):FromDev,((28)):FromDev,((30)):FromDev,((0)):FromDev,((22)):Changed(Some(((44)))),((26)):FromDev,((24)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"Impossible teleportation"),(4):Named((name:(eng:"When this does not work",rus:"Когда это не работает"),description:Some((eng:"Just like regular flat portal in portal brakes in something, this scene breaks in this scenario.\n\nExcept flat portal in portal not brakes in this scenario (minimum scale), but half-sphere (max scale) one does. \n\nIt\'s strange, like nor half-sphere nor flat surface is fundamental for portals.",rus:"Как обычные порталы ломаются в кейсе портала в портале, так и этот ломается в этом кейсе.\n\nХотя для обычных плоских порталов (здесь можно это имитировать, сделав scale минимальным) эта сцена бы не представляла труда, просто порталу пролелеть рядом.\n\nЭто странно, получается плоская форма или полусферическая форма не являются фундаментальными (потому что у них есть кейсы где они ломаются), и конечная модель порталов должна быть составлена без них.")),uniforms:({((19)):FromDev,((7)):FromDev,((11)):ChangedAndToUser(Some(((30)))),((14)):FromDev,((0)):FromDev,((15)):FromDev,((18)):Changed(Some(((31)))),((2)):FromDev,((10)):FromDev,((9)):ChangedAndToUser(Some(((28)))),((1)):FromDev,((12)):FromDev,((8)):FromDev,((13)):FromDev}),matrices:({((29)):FromDev,((28)):FromDev,((19)):FromDev,((14)):FromDev,((23)):FromDev,((24)):FromDev,((26)):FromDev,((16)):FromDev,((38)):FromDev,((18)):FromDev,((32)):FromDev,((36)):FromDev,((15)):Changed(Some(((47)))),((13)):FromDev,((17)):FromDev,((22)):Changed(Some(((46)))),((30)):FromDev,((0)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"When this does not work"),(5):Named((name:(eng:"With object",rus:"С объектом"),description:Some((eng:"Just to show that this works with object too.",rus:"Просто чтобы показать что это тоже работает с объектом.")),uniforms:({((19)):FromDev,((9)):FromDev,((10)):FromDev,((0)):FromDev,((2)):FromDev,((1)):FromDev,((7)):FromDev,((11)):Changed(Some(((35)))),((12)):ChangedAndToUser(Some(((32)))),((13)):Changed(Some(((33)))),((14)):FromDev,((8)):FromDev,((15)):FromDev,((18)):Changed(Some(((37))))}),matrices:({((36)):FromDev,((38)):FromDev,((23)):FromDev,((15)):Changed(Some(((49)))),((29)):Changed(Some(((50)))),((17)):FromDev,((19)):FromDev,((14)):FromDev,((16)):FromDev,((26)):FromDev,((28)):FromDev,((13)):FromDev,((30)):FromDev,((18)):FromDev,((24)):FromDev,((0)):FromDev,((22)):Changed(Some(((48)))),((32)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"With object")},storage_order:[(0),(2),(3),(4),(5)]),current_stage:Some(((2))),dev_stage:(uniforms:({((19)):Formula(("1")),((7)):Bool(true),((12)):Float((min:Some(0),max:Some(10),value:0)),((1)):Float((min:Some(0),max:None,value:4)),((15)):Bool(false),((2)):Float((min:Some(0),max:None,value:4)),((0)):Float((min:Some(0),max:None,value:4)),((8)):Bool(false),((9)):Float((min:None,max:None,value:1)),((6)):Progress(0),((10)):Bool(false),((11)):Float((min:Some(0),max:Some(10),value:0)),((13)):Bool(false),((14)):Bool(false),((18)):Bool(false)}),matrices:({((14)):Mul(to:Some(((21))),what:Some(((22)))),((28)):Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((26)))),((30)):Mul(to:Some(((16))),what:Some(((25)))),((13)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((38)):Teleport(first_portal:Some(((19))),second_portal:Some(((18))),what:Some(((36)))),((15)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((22)):Simple(offset:(0,0,2),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((16)):Simple(offset:(0,0,0),scale:0.22,rotate:(0,0,0),mirror:(false,false,false)),((19)):Mul(to:Some(((17))),what:Some(((14)))),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((18)):Mul(to:Some(((17))),what:Some(((13)))),((29)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((24)):Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((19)))),((36)):Teleport(first_portal:Some(((19))),second_portal:Some(((18))),what:Some(((18)))),((23)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((32)):Mul(to:Some(((30))),what:Some(((29)))),((17)):Exact(i:(x:No(1),y:No(0),z:No(0)),j:(x:No(0),y:Yes(Some(((19)))),z:No(0)),k:(x:No(0),y:No(0),z:Yes(Some(((9))))),pos:(x:No(0),y:No(0),z:No(0))),((26)):Teleport(first_portal:Some(((18))),second_portal:Some(((19))),what:Some(((24))))})),use_time:false)