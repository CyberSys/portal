(desc:(eng:"There are possible to create closed portal from one part, that creates room, that looks like it covering all the space with triangular tiling.\n\nThis portal can be built from three parts of a regular monoportal: center part, and two sides.",rus:"Можно собрать замкнутый портал из одной части, который образует изображение комнаты, похожую на треугольное замощение плоскости.\n\nТакой треугольный портал можно собрать из трёх частей монопортала: его центральной части и двух боковых, которые по сути являются двумя обычными порталами."),cam:(look_at:(0,0,0),alpha:-54.729935791955775,beta:0.9345925986766785,r:1.8260271200149205,offset_after_material:0.000025),uniforms:(ids:(available:[],max:20),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Bool(false),"mirror"),(9):Named(Progress(1),"angle"),(10):Named(Float((min:Some(0),max:None,value:0.83)),"len"),(11):Named(Float((min:Some(0),max:None,value:0.17)),"h"),(12):Inline(Formula(("-len"))),(13):Inline(Formula(("pi()+2*pi()/3*angle"))),(14):Inline(Formula(("-pi()/3*2*angle"))),(15):Inline(Formula(("-(3^(0.5)/3*len)"))),(16):Named(Bool(true),"enable_object"),(17):Inline(Bool(true)),(18):Inline(Bool(false)),(19):Inline(Progress(0))},storage_order:[(0),(1),(2),(6),(7),(8),(9),(10),(11),(16)]),matrices:(ids:(available:[],max:29),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Mul(to:Some(((27))),what:Some(((26)))),"portal"),(14):Inline(Mul(to:Some(((15))),what:Some(((13))))),(15):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(16):Inline(Mul(to:Some(((17))),what:Some(((13))))),(17):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,3.141592653589793,0),mirror:(false,false,false))),(18):Inline(Mul(to:Some(((20))),what:Some(((13))))),(19):Inline(Mul(to:Some(((21))),what:Some(((13))))),(20):Inline(Mul(to:Some(((25))),what:Some(((24))))),(21):Inline(Mul(to:Some(((23))),what:Some(((22))))),(22):Inline(Parametrized(offset:(x:Yes(Some(((12)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(23):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((13)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(24):Inline(Parametrized(offset:(x:Yes(Some(((10)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(25):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((14)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(26):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"portal_user"),(27):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((15))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(28):Named(Simple(offset:(0.27,0,-0.31),scale:0.11,rotate:(0,0,0),mirror:(false,false,false)),"object")},storage_order:[(0),(13),(26),(28)]),objects:(ids:(available:[],max:9),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Flat(kind:Portal(Some(((14))),Some(((16)))),is_inside:(("if (x > len_u || x < 0.) return NOT_INSIDE;\n\nreturn is_inside_portal(\n  rect_distance(x, y, len_u, h_u),\n  1.0,\n  0.05,\n  0.01,\n  portal_blue_M,\n  portal_blue_M,\n  grid_gray_M,\n  grid_gray_M,\n  back,\n  first\n);"))),"portal1"),(7):Named(Flat(kind:Portal(Some(((18))),Some(((19)))),is_inside:(("if (x > len_u * 2.) x = len_u*2. + (x - len_u*2.) / (1.-angle_u);\n\nif (x < 0.) return NOT_INSIDE;\n\nreturn is_inside_portal(\n  rect_distance(x, y, len_u*2., h_u),\n  1.0,\n  0.05,\n  0.01,\n  portal_blue_M,\n  portal_blue_M,\n  grid_gray_M,\n  grid_gray_M,\n  back,\n  first\n);"))),"portal2"),(8):Named(Complex(kind:Simple(Some(((28)))),intersect:(("if (enable_object_u == 0) return scene_intersection_none; \n\nvec3 op = -r.o.xyz;\nfloat b = dot(op, r.d.xyz);\nfloat det = b*b - dot(op, op) + 1.0;\nif (det < 0.) return scene_intersection_none;\n\ndet = sqrt(det);\nfloat t = b - det;\nif (t < 0.) t = b + det;\nif (t < 0.) return scene_intersection_none;\n\nvec4 pos = r.o + r.d * t;\nvec3 n = normalize(pos.xyz);\n\nfloat u = atan(pos.z, pos.x);\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\n\nreturn SceneIntersection(grid_gray_M, SurfaceIntersection(true, t, u, v, n), false);"))),"object")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8)]),cameras:(ids:(available:[],max:2),storage:{(0):Named((look_at:Coordinate((0,0,0)),alpha:-54.485720214114885,beta:1.0568350577354408,r:0.20392734484560007),"View from inside"),(1):Named((look_at:Coordinate((0,0,0)),alpha:-54.43652259276938,beta:1.1432237172126745,r:3.2349184307607333),"View from outside")},storage_order:[(0),(1)]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:21),storage:{(0):Named(Simple(color:(0.7647179,0.7024815,0.061205085),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.029196177,0.029196177,0.029196177),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8458183,0.07454156,0.07454156),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.18068509,0.18068509,0.18068509),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.116810285,0.26798066,0.9083436),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15478948,0.73873776,0.2186588),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1.16810285e-1, 2.6798066e-1, 9.083436e-1), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14)]),library:(ids:(available:[],max:4),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y, float a, float b) {\n  return max(abs(x)-a+1., abs(y)-b+1.);\n}\n\nfloat triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance < size) return material_inner;\r\n  if (distance < size + border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"portal")},storage_order:[(2),(0),(1),(3)]),animations_filters:(uniforms:({((6)):false,((16)):true,((11)):true,((1)):false,((7)):false,((9)):true,((8)):false,((0)):false,((2)):false,((10)):true}),matrices:({((26)):true,((28)):true,((0)):false,((13)):false}),cameras:({((0)):true,((1)):true})),elements_descriptions:(uniforms:({((16)):(help_description:None,overrided_name:""),((11)):(help_description:None,overrided_name:"Height"),((9)):(help_description:None,overrided_name:"Progress"),((10)):(help_description:None,overrided_name:"Width")}),matrices:({((26)):(help_description:None,overrided_name:"Portal position"),((28)):(help_description:None,overrided_name:"Object position")}),cameras:({((1)):(help_description:None,overrided_name:"View from outside"),((0)):(help_description:None,overrided_name:"View from inside")})),user_uniforms:(uniforms:({((11)):true,((2)):false,((8)):false,((10)):true,((9)):false,((0)):false,((1)):false,((7)):false,((16)):false,((6)):false}),matrices:({((13)):false,((0)):false,((26)):false,((28)):false})),animation_stages:(ids:(available:[],max:2),storage:{(0):Named((name:(eng:"How to construct",rus:"Как построить"),description:None,uniforms:({((16)):Changed(Some(((18)))),((11)):FromDev,((8)):FromDev,((9)):ChangedAndToUser(Some(((19)))),((6)):FromDev,((0)):FromDev,((2)):FromDev,((7)):FromDev,((10)):FromDev,((1)):FromDev}),matrices:({((0)):FromDev,((13)):FromDev,((26)):FromDev,((28)):FromDev}),original_cam_button:false,set_cam:None,cams:{((0)):false,((1)):false}),"How to construct"),(1):Named((name:(eng:"Explore",rus:"Изучение"),description:None,uniforms:({((2)):FromDev,((6)):FromDev,((8)):FromDev,((9)):ProvidedToUser,((1)):FromDev,((0)):FromDev,((10)):FromDev,((7)):FromDev,((11)):FromDev,((16)):Changed(Some(((17))))}),matrices:({((13)):FromDev,((0)):FromDev,((28)):ProvidedToUser,((26)):ProvidedToUser}),original_cam_button:true,set_cam:None,cams:{((0)):true,((1)):true}),"Explore")},storage_order:[(0),(1)]),current_stage:Some(((1))),dev_stage:(uniforms:({((7)):Bool(true),((10)):Float((min:Some(0),max:None,value:0.83)),((16)):Bool(true),((0)):Float((min:Some(0),max:None,value:4)),((8)):Bool(false),((11)):Float((min:Some(0),max:None,value:0.17)),((6)):Progress(0),((1)):Float((min:Some(0),max:None,value:4)),((2)):Float((min:Some(0),max:None,value:4)),((9)):Progress(1)}),matrices:({((13)):Mul(to:Some(((27))),what:Some(((26)))),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((26)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((28)):Simple(offset:(0.27,0,-0.31),scale:0.11,rotate:(0,0,0),mirror:(false,false,false))})),use_time:false)