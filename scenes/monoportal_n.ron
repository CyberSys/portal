(desc:(eng:"# N-monoportal\n\nThis monoportal (portal with one continuous surface) acts as it consists of N parts, e.g. of three parts (look at `Triple portal` scene), but every time there is only one part!\n\n# Construction\n\nTake regular Monoportal and rotate its parts until the angle between them will equal `360°/Count`.\n\n# Regular monoportal\n\nThis is derived with `Count = 2`, and this is pretty obvious, it looks like it has two parts. \n\nIf you replace portals with mirrors (`Act as a mirror` option), then it looks like a regular mirror.\n\nIf you mirror one part (with `Mirror one part vertically` option) (this is not the same, as make this part a mirror!) then the portal looks like a regular rotating monoportal.\n\n# Triple monoportal\n\nThis sounds wild, but this looks like a baby from Monoportal and Triple portal. Image through this portal is continuous, and this is important. \n\nBut, for the mirror continuous of the image brokes.\n\nAlso, it brokes for the mirrored one-part option.\n\n# Quadruple monoportal\n\nHere mirror is not broken. Actually, the mirror is broken only for odd N.\n\nFor mirror enabled, a quarter in the middle looks like a regular monoportal, and this is! This is how a «True mirror» is created: just two mirrors around each other with the 90° angle between.\n\nSame thing for the mirrored one-part option.\n\n# Other\n\nOther monoportals look boring.\n",rus:"# N-монопортал\n\nЭто монопортал (портал с одной непрерывной телепортирующей поверхностью), который ведёт себя как будто он состоит из N частей, например из трёх (смотри тройной портал), но на самом деле часть всегда одна!\n\n# Построение\n\nБерём обычный монопортал и просто вращаем его части, чтобы между ними был угол `360°/Count`.\n\n# Обычный монопортал\n\nОн получается при `Count = 2`, и это довольно очевидно, он выглядит как будто у него есть две части. \n\nЕсли заменить порталы на зеркала (опция `Act as a mirror`), то он выглядит как обычное зеркало.\n\nЕсли отзеркалить одну портальную часть (опция `Mirror one part vertically`) (это не то же самое что сделать её зеркалом!), то портал выглядит как обычный вращающий монопортал.\n\n# Тройной монопортал\n\nЭто звучит дико, но это похоже на ребёнка монопортала и тройной портала. Самое главное что в нём изображение сохраняет непрерывность и выглядит хорошо. \n\nЗеркало здесь ломается посередине.\n\nОтзеркаливание одной части тоже ломается.\n\n# Четверной монопортал\n\nА тут уже зеркало не ломается. На самом деле зеркало ломается только для нечётных N.\n\nЧетвертинка посередине выглядит как обычный монопортал — через неё можно читать текст напротив вас, и это сохраняется даже если включить зеркало! Именно так и сделан предмет под названием «True mirror», он состоит из двух зеркал, стоящих друг напротив друга под 90°.\n\nАналогично для опции отзеркаливания одной части.\n\n# Остальные\n\nОстальные монопорталы ничем не выделяются."),cam:(look_at:(0,0,0),alpha:-1.795455899776223,beta:1.0600336456298827,r:3.8500000000000165,offset_after_material:0.000030000000000000004),uniforms:(ids:(available:[],max:23),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Int((min:Some(2),max:Some(7),value:3)),"count"),(7):Named(Float((min:None,max:None,value:1)),"portal_ellipse_a"),(8):Named(Float((min:None,max:None,value:1)),"portal_ellipse_b"),(9):Named(Bool(true),"portal_teleport_light"),(10):Named(Float((min:None,max:None,value:0.13)),"portal_border_size"),(11):Named(Bool(false),"portal_mirror"),(12):Named(Progress(0.14),"triangle_x"),(13):Named(Progress(0.5),"triangle_y"),(14):Named(Bool(false),"mirror_part"),(15):Named(Progress(0.19),"triangle_z"),(16):Inline(Formula(("(triangle_y-0.5)/0.5*2."))),(17):Inline(Formula(("0.001"))),(18):Inline(Formula(("pi() - (pi() - 2*pi()/count)/2"))),(19):Inline(Formula(("mirror_part"))),(20):Inline(Formula(("(pi() - 2*pi()/count)/2"))),(21):Inline(Formula(("(triangle_x-0.5)/0.5*1.5"))),(22):Inline(Formula(("(triangle_z-0.5)/0.5*2.")))},storage_order:[(0),(1),(2),(7),(8),(9),(14),(11),(10),(6),(12),(13),(15)]),matrices:(ids:(available:[(14)],max:19),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Inline(Teleport(first_portal:Some(((18))),second_portal:Some(((17))),what:Some(((15))))),(15):Named(Parametrized(offset:(x:Yes(Some(((21)))),y:Yes(Some(((16)))),z:Yes(Some(((22))))),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(0.55)),"object"),(16):Inline(Teleport(first_portal:Some(((17))),second_portal:Some(((18))),what:Some(((15))))),(17):Named(Parametrized(offset:(x:Yes(Some(((17)))),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((18)))),z:No(0)),mirror:(x:No(0),y:Yes(Some(((19)))),z:No(0)),scale:No(1)),"a"),(18):Named(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((20)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"b")},storage_order:[(0),(15),(17),(18)]),objects:(ids:(available:[],max:10),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);")),in_subspace:Normal),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);")),in_subspace:Normal),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);")),in_subspace:Normal),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);")),in_subspace:Normal),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);")),in_subspace:Normal),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_texture_M);")),in_subspace:Normal),"room_z-"),(6):Named(Flat(kind:Portal(Some(((17))),Some(((18)))),is_inside:(("int back_material = solid_black_M;\n\nint teleport_material = TELEPORT;\nif (portal_teleport_light_u == 0) { teleport_material = grid_gray_M; }\nif (back) { teleport_material = back_material; }\nif (portal_mirror_u == 1) { teleport_material = mirror_M; }\n\nfloat radius = 2.0;\nfloat radius_sqr = sqr(radius);\nfloat radius_border_sqr = sqr(radius + portal_border_size_u);\nfloat pos1 = sqr(x*portal_ellipse_a_u) + sqr(y*portal_ellipse_b_u);\n\nif (pos1 < radius_border_sqr && x > 0.) {\n  if (pos1 > radius_sqr) {\n    return back_material;\n  } else {\n    return teleport_material;\n  }\n} else {\n  return NOT_INSIDE;\n}")),in_subspace:Normal),"monoportal"),(7):Named(Flat(kind:Simple(Some(((15)))),is_inside:(("if ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\nif ((a_mat_inv * pos).z < 0.) return NOT_INSIDE;\n\nreturn is_inside_object(\n  0.3,\n  triangle_distance(x, y, 1.61, -1.61, 1.0),\n  0.03,\n  triangle_white_M,\n  triangle_black_M\n);")),in_subspace:Normal),"triangle"),(8):Named(Flat(kind:Simple(Some(((16)))),is_inside:(("if ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\nif ((a_mat_inv * pos).z < 0.) return NOT_INSIDE;\n\nreturn is_inside_object(\n  0.3,\n  triangle_distance(x, y, 1.61, -1.61, 1.0),\n  0.03,\n  triangle_white_M,\n  triangle_black_M\n);")),in_subspace:Normal),"triangle_teleported"),(9):Named(Flat(kind:Simple(Some(((13)))),is_inside:(("if ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\nif ((a_mat_inv * pos).z < 0.) return NOT_INSIDE;\n\nreturn is_inside_object(\n  0.3,\n  triangle_distance(x, y, 1.61, -1.61, 1.0),\n  0.03,\n  triangle_white_M,\n  triangle_black_M\n);")),in_subspace:Normal),"triangle_teleported2")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)]),cameras:(ids:(available:[],max:0),storage:{},storage_order:[]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"monoportal")},storage_order:[(0)]),materials:(ids:(available:[],max:14),storage:{(0):Named(Simple(color:(0.8980392156862745,0.8313725490196079,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_yellow"),(1):Named(Simple(color:(0.050980392156862744,0.050980392156862744,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_black"),(2):Named(Simple(color:(0.9058823529411765,0.29411764705882354,0.29411764705882354),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_red"),(3):Named(Simple(color:(0.2235294117647059,0.2235294117647059,0.2235294117647059),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_gray"),(4):Named(Simple(color:(0.3137254901960784,0.38823529411764707,0.9254901960784314),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_blue"),(5):Named(Simple(color:(0.2627450980392157,0.8470588235294118,0.30196078431372547),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:true,grid3:false),"grid_gray"),(9):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(10):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"solid_black"),(11):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(2.627450980392157e-1, 8.470588235294118e-1, 3.0196078431372547e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(monoportal_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(12):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"triangle_white"),(13):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"triangle_black")},storage_order:[(0),(2),(1),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)]),intersection_materials:(ids:(available:[],max:0),storage:{},storage_order:[]),library:(ids:(available:[],max:2),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("float triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance > size) return material_inner;\r\n  if (distance > size -border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n")),"common")},storage_order:[(0),(1)]),animations_filters:(uniforms:({((1)):false,((8)):false,((2)):false,((10)):false,((12)):true,((15)):true,((6)):true,((14)):true,((7)):false,((11)):true,((0)):false,((13)):true,((9)):true}),matrices:({((18)):false,((17)):false,((15)):false,((0)):false}),cameras:({})),elements_descriptions:(uniforms:({((10)):(help_description:None,overrided_name:""),((6)):(help_description:None,overrided_name:"Count"),((15)):(help_description:None,overrided_name:"Triangle Z"),((7)):(help_description:None,overrided_name:"Ellipse A"),((11)):(help_description:None,overrided_name:"Act as mirror"),((9)):(help_description:None,overrided_name:"Teleport light"),((13)):(help_description:None,overrided_name:"Triangle Y"),((8)):(help_description:None,overrided_name:"Ellipse B"),((12)):(help_description:None,overrided_name:"Triangle X"),((14)):(help_description:None,overrided_name:"Mirror one part vertically")}),matrices:({}),cameras:({})),user_uniforms:(uniforms:({((13)):true,((8)):false,((9)):true,((11)):true,((15)):true,((12)):true,((14)):true,((6)):true,((7)):false}),matrices:({})),animation_stages:(ids:(available:[],max:0),storage:{},storage_order:[]),current_stage:Dev,dev_stage:(uniforms:({((12)):Progress(0.14),((13)):Progress(0.5),((6)):Int((min:Some(2),max:Some(7),value:3)),((8)):Float((min:None,max:None,value:1)),((9)):Bool(true),((15)):Progress(0.19),((1)):Float((min:Some(0),max:None,value:4)),((10)):Float((min:None,max:None,value:0.13)),((2)):Float((min:Some(0),max:None,value:4)),((0)):Float((min:Some(0),max:None,value:4)),((14)):Bool(false),((7)):Float((min:None,max:None,value:1)),((11)):Bool(false)}),matrices:({((18)):Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((20)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),((17)):Parametrized(offset:(x:Yes(Some(((17)))),y:No(0),z:No(0)),rotate:(x:No(0),y:Yes(Some(((18)))),z:No(0)),mirror:(x:No(0),y:Yes(Some(((19)))),z:No(0)),scale:No(1)),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((15)):Parametrized(offset:(x:Yes(Some(((21)))),y:Yes(Some(((16)))),z:Yes(Some(((22))))),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(0.55))})),animations:(ids:(available:[],max:0),storage:{},storage_order:[]),use_time:false,skybox:None)