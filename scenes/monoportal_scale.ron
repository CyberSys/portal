(desc:(eng:"# Scaling monoportal\n\nIt constructed from rotating monoportal. It needs support portals to be continuous. \n\nThis portal has one continuous surface which can enlarge or reduce objects.",rus:"# Масштабирующий монопортал\n\nДанный монопортал построен на основе вращающего монопортала. Ему для непрерывности необходимы поддерживающие порталы.\n\nДанный портал состоит из одной непрерывной поверхности, при вхождении в которую возможно как увеличиваться так и уменьшаться."),cam:(look_at:(0,0,0),alpha:-4.1878819626133135,beta:1.0042038863003249,r:2.8925619834711065,offset_after_material:0.000025),uniforms:(ids:(available:[],max:31),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Float((min:Some(0),max:None,value:0.5)),"h1"),(7):Named(Float((min:Some(0),max:None,value:0.5)),"h2"),(8):Named(Float((min:Some(0),max:None,value:2)),"scale"),(9):Named(Float((min:Some(0),max:None,value:0.5)),"w1"),(10):Named(Float((min:Some(0),max:None,value:0.5)),"w2"),(11):Inline(Formula(("1.0/scale"))),(12):Inline(Formula(("h1-h1/scale"))),(13):Inline(Formula(("1.0/(scale*scale)"))),(14):Inline(Formula(("h1-2*h1/scale-h2/(scale*2.0)"))),(15):Inline(Formula(("-(h1+h2*scale/2)"))),(16):Inline(Formula(("-0.00005"))),(17):Named(Progress(1),"supp_progress"),(18):Inline(Formula(("progress"))),(19):Named(Progress(0),"progress"),(20):Inline(Formula(("1.0 + progress"))),(21):Inline(Float((min:Some(0),max:None,value:2))),(22):Inline(Formula(("h1 + h2 + h1/scale"))),(23):Inline(Formula(("1/scale"))),(24):Inline(Formula(("h1 + h2 + h1/scale*2 + h2/scale/2"))),(25):Inline(Formula(("1.0/(scale*scale)"))),(26):Inline(Float((min:Some(0),max:None,value:2))),(27):Inline(Formula(("+0.00005"))),(28):Inline(Formula(("0.00005"))),(29):Inline(Formula(("0.00005"))),(30):Inline(Formula(("0.00005")))},storage_order:[(0),(1),(2),(6),(7),(9),(10),(8),(17),(19)]),matrices:(ids:(available:[],max:20),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Simple(offset:(0.0005,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"portal_a"),(14):Named(Parametrized(offset:(x:Yes(Some(((28)))),y:Yes(Some(((12)))),z:No(0)),rotate:(x:No(0),y:No(3.141592653589793),z:No(0)),mirror:(x:No(0),y:No(1),z:No(0)),scale:Yes(Some(((11))))),"portal_b"),(15):Named(Parametrized(offset:(x:Yes(Some(((16)))),y:Yes(Some(((15)))),z:No(0)),rotate:(x:No(4.71238898038469),y:No(4.71238898038469),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"supp_portal_a"),(16):Named(Parametrized(offset:(x:Yes(Some(((27)))),y:Yes(Some(((14)))),z:No(0)),rotate:(x:No(4.71238898038469),y:No(4.71238898038469),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:Yes(Some(((13))))),"supp_portal_b"),(17):Named(Simple(offset:(-0.5,-0.7,0.72),scale:1,rotate:(4.71238898038469,0,0),mirror:(false,false,false)),"triangle"),(18):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((22)))),z:No(0)),rotate:(x:No(0),y:No(3.141592653589793),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:Yes(Some(((23)))))),(19):Inline(Parametrized(offset:(x:Yes(Some(((30)))),y:Yes(Some(((24)))),z:No(0)),rotate:(x:No(4.71238898038469),y:No(4.71238898038469),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:Yes(Some(((25))))))},storage_order:[(0),(13),(14),(15),(16),(17)]),objects:(ids:(available:[],max:9),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Flat(kind:Portal(Some(((13))),Some(((14)))),is_inside:(("float left_up_x = -(w2_u + w1_u);\nfloat left_up_y = h1_u + h2_u;\nfloat right_down_x = 0.0;\nfloat right_down_y = -(h1_u + h2_u * scale_u);\nfloat border_u = 0.05;\nif (!first) border_u *= scale_u;\n\nint material = NOT_INSIDE;\nif (between(left_up_x - border_u, x, right_down_x) && \n    between(right_down_y - border_u, y, left_up_y + border_u))\n    material = black_M;\nif (between(left_up_x, x, right_down_x) && \n    between(right_down_y, y, left_up_y) && \n    !back)\n    material = TELEPORT;\n\nfloat left_up_inner_x = -w1_u;\nfloat left_up_inner_y = h1_u;\nfloat right_down_inner_x = 0.0;\nfloat right_down_inner_y = -h1_u;\n\nif (between(left_up_inner_x, x, right_down_inner_x) && \n    between(right_down_inner_y, y, left_up_inner_y))\n    material = black_M;\nif (between(left_up_inner_x + border_u, x, right_down_inner_x) && \n    between(right_down_inner_y + border_u, y, left_up_inner_y - border_u))\n    material = NOT_INSIDE;\n\nreturn material;"))),"portal"),(7):Named(Flat(kind:Portal(Some(((15))),Some(((16)))),is_inside:(("if (y > 0.) return NOT_INSIDE;\nfloat value = (x*x + y*y) / (supp_progress_u + 0.0001);\nfloat border_u = 0.05;\nif (!first) border_u *= scale_u * scale_u;\n\nint material = NOT_INSIDE;\nif (value < sqr(h2_u * scale_u / 2.0 + border_u)) material = black_M;\nif (value < sqr(h2_u * scale_u / 2.0) && !back) material = TELEPORT;\n\nreturn material;"))),"supp_portal"),(8):Named(Flat(kind:Simple(Some(((17)))),is_inside:(("return is_inside_triangle(x, y, 2.0, 0.7, 0.02, triangle_white_M, triangle_black_M);"))),"triangle")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8)]),cameras:(ids:(available:[],max:0),storage:{},storage_order:[]),textures:(ids:(available:[],max:0),storage:{},storage_order:[]),materials:(ids:(available:[],max:9),storage:{(0):Named(Simple(color:(0.8980392156862745,0.8313725490196079,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_yellow"),(1):Named(Simple(color:(0.050980392156862744,0.050980392156862744,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_black"),(2):Named(Simple(color:(0.9058823529411765,0.29411764705882354,0.29411764705882354),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_red"),(3):Named(Simple(color:(0.2235294117647059,0.2235294117647059,0.2235294117647059),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_gray"),(4):Named(Simple(color:(0.3137254901960784,0.38823529411764707,0.9254901960784314),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_blue"),(5):Named(Simple(color:(0.2627450980392157,0.8470588235294118,0.30196078431372547),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_green"),(6):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"black"),(7):Named(Simple(color:(0.5215686274509804,0.5215686274509804,0.5215686274509804),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(8):Named(Simple(color:(0.023529411764705882,0.023529411764705882,0.023529411764705882),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black")},storage_order:[(0),(2),(1),(3),(4),(5),(6),(7),(8)]),library:(ids:(available:[],max:2),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("int is_inside_triangle(float x, float y, float angle, float width, float border, int inner_m, int border_m) {\n  float value = width - abs(x)*angle;\n  if (between(border, y, value - border * angle)) {\n    return inner_m;\n  } else if (between(0., y, value)) {\n    return border_m;\n  } else {\n    return NOT_INSIDE;\n  }\n}")),"triangle")},storage_order:[(0),(1)]),animations_filters:(uniforms:({((17)):true,((8)):true,((2)):false,((10)):true,((9)):true,((7)):true,((19)):true,((1)):false,((0)):false,((6)):true}),matrices:({((16)):true,((13)):false,((14)):true,((15)):false,((17)):true,((0)):false}),cameras:({})),elements_descriptions:(uniforms:({((6)):(help_description:None,overrided_name:"h1"),((17)):(help_description:None,overrided_name:""),((7)):(help_description:None,overrided_name:"h2"),((8)):(help_description:None,overrided_name:"Scale"),((10)):(help_description:None,overrided_name:"w2"),((9)):(help_description:None,overrided_name:"w1"),((19)):(help_description:None,overrided_name:"Progress")}),matrices:({((17)):(help_description:None,overrided_name:"Triangle")}),cameras:({})),user_uniforms:(uniforms:({((0)):false,((1)):false,((6)):false,((9)):false,((2)):false,((10)):false,((8)):false,((7)):false,((19)):false,((17)):false}),matrices:({((13)):false,((16)):false,((15)):false,((17)):false,((0)):false,((14)):false})),animation_stages:(ids:(available:[],max:4),storage:{(0):Named((name:(eng:"Add support portals doorway",rus:"Добавляем дверной проём от поддерживающих монопорталов"),description:Some((eng:"First, take rotating monoportal in shape of the square with hole in the middle.\n\nNext, add doorway which will be used later to create support portals.\n\nAfter this we can see that original monoportal is splitted into two parts: left and right.",rus:"Сначала берём вращающий монопортал и задаём ему форму квадрата с дыркой посередине.\n\nПотом добавляем дверной проём, через который дальше мы вырежем порталы в пространстве.\n\nПосле добавления видно что портал разделён на две визуальные части: левую и правую.")),uniforms:({((6)):FromDev,((2)):FromDev,((19)):ProvidedToUser,((9)):FromDev,((0)):FromDev,((7)):FromDev,((8)):FromDev,((1)):FromDev,((17)):Changed(Some(((18)))),((10)):FromDev}),matrices:({((0)):FromDev,((17)):FromDev,((14)):FromDev,((13)):FromDev,((16)):FromDev,((15)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"add support"),(1):Named((name:(eng:"Scale one part",rus:"Масштабируем одну часть"),description:Some((eng:"Now we can independently scale left part. When scale is changed, sizes by diagonal must match considering scale, this is why left down part is enlarged.",rus:"Теперь, так как у нас портал разделён на две части, мы можем изменить масштаб одной части. При изменении масштаба нужно чтобы размеры по диагонали совпадали с учётом масштаба. Поэтому нижняя часть левой части увеличивается.")),uniforms:({((6)):FromDev,((2)):FromDev,((0)):FromDev,((19)):ProvidedToUser,((17)):FromDev,((9)):FromDev,((8)):Changed(Some(((20)))),((1)):FromDev,((10)):FromDev,((7)):FromDev}),matrices:({((13)):FromDev,((17)):FromDev,((16)):FromDev,((15)):FromDev,((14)):FromDev,((0)):FromDev}),original_cam_button:false,set_cam:None,cams:{}),"scale one part"),(2):Named((name:(eng:"Explore",rus:"Исследование"),description:None,uniforms:({((2)):FromDev,((19)):FromDev,((9)):ProvidedToUser,((7)):ProvidedToUser,((6)):ProvidedToUser,((8)):ChangedAndToUser(Some(((21)))),((10)):ProvidedToUser,((17)):FromDev,((1)):FromDev,((0)):FromDev}),matrices:({((0)):FromDev,((15)):FromDev,((14)):FromDev,((13)):FromDev,((16)):FromDev,((17)):ProvidedToUser}),original_cam_button:false,set_cam:None,cams:{}),"explore"),(3):Named((name:(eng:"A little another scaling monoportal",rus:"Немного другой масштабирующий монопортал"),description:Some((eng:"As you know, in the rotating monoportal one part is mirrored. But what if cancel this mirroring? Then we will get scaling monoportal based on offsetting monoportal, but in different shape.",rus:"Как вы уже знаете, в вращающем монопортале одна из частей отзеркалена. Но что если отменить это зеркалирование? Тогда получится масштабирующий монопортал, основанный на смещающем, но в другой форме.")),uniforms:({((10)):ProvidedToUser,((9)):ProvidedToUser,((2)):FromDev,((0)):FromDev,((19)):FromDev,((1)):FromDev,((7)):ProvidedToUser,((8)):ChangedAndToUser(Some(((26)))),((17)):FromDev,((6)):ProvidedToUser}),matrices:({((16)):Changed(Some(((19)))),((14)):Changed(Some(((18)))),((15)):FromDev,((13)):FromDev,((0)):FromDev,((17)):ProvidedToUser}),original_cam_button:false,set_cam:None,cams:{}),"another")},storage_order:[(0),(1),(2),(3)]),current_stage:Some(((2))),dev_stage:(uniforms:({((6)):Float((min:Some(0),max:None,value:0.5)),((9)):Float((min:Some(0),max:None,value:0.5)),((7)):Float((min:Some(0),max:None,value:0.5)),((19)):Progress(0),((10)):Float((min:Some(0),max:None,value:0.5)),((1)):Float((min:Some(0),max:None,value:4)),((17)):Progress(1),((8)):Float((min:Some(1),max:None,value:1)),((2)):Float((min:Some(0),max:None,value:4)),((0)):Float((min:Some(0),max:None,value:4))}),matrices:({((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((13)):Simple(offset:(0.0005,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((16)):Parametrized(offset:(x:Yes(Some(((27)))),y:Yes(Some(((14)))),z:No(0)),rotate:(x:No(4.71238898038469),y:No(4.71238898038469),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:Yes(Some(((13))))),((14)):Parametrized(offset:(x:Yes(Some(((28)))),y:Yes(Some(((12)))),z:No(0)),rotate:(x:No(0),y:No(3.141592653589793),z:No(0)),mirror:(x:No(0),y:No(1),z:No(0)),scale:Yes(Some(((11))))),((17)):Simple(offset:(-0.5,-0.7,0.72),scale:1,rotate:(4.71238898038469,0,0),mirror:(false,false,false)),((15)):Parametrized(offset:(x:Yes(Some(((16)))),y:Yes(Some(((15)))),z:No(0)),rotate:(x:No(4.71238898038469),y:No(4.71238898038469),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))})))