(desc:(eng:"This scene shows that one portal always can be represented as many portals and that portals cut incoming objects by their edges.",rus:"Данная сцена показывает что один портал всегда можно представить как несколько порталов и что порталы обрезают входящие объекты на своей границе."),cam:(look_at:(0,0,0),alpha:1.2838561583894414,beta:1.02149951726199,r:3.1818181818182043,offset_after_material:0.000025),uniforms:(ids:(available:[],max:35),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Float((min:Some(-0.5),max:Some(0.5),value:0)),"vx"),(8):Named(Float((min:Some(-0.5),max:Some(0.5),value:-0.01)),"vy"),(9):Named(Float((min:Some(-1),max:Some(1),value:-1)),"vz"),(10):Named(Formula(("(user_time * 2 - 1.0)")),"t"),(11):Inline(Formula(("vx*time"))),(12):Inline(Formula(("vy*time"))),(13):Inline(Formula(("vz*time"))),(14):Inline(Formula(("vx*t"))),(15):Inline(Formula(("vy*t"))),(16):Inline(Formula(("vz*t"))),(17):Named(Angle(0.7853981633974483),"cut_angle"),(18):Named(Float((min:Some(-1),max:Some(1),value:-0.05)),"cut_offset"),(19):Named(Bool(false),"teleport_light"),(20):Named(Bool(true),"cut_enabled"),(21):Named(Progress(0),"user_time"),(22):Inline(Formula(("-vx"))),(23):Inline(Formula(("-vz"))),(24):Inline(Formula(("vy"))),(25):Named(Float((min:None,max:None,value:0.3)),"cut_length"),(26):Inline(Bool(false)),(27):Inline(Bool(false)),(28):Inline(Bool(true)),(29):Inline(Bool(false)),(30):Inline(Bool(true)),(31):Inline(Angle(0.7853981633974483)),(32):Inline(Float((min:Some(-1),max:Some(1),value:-0.05))),(33):Inline(Float((min:None,max:None,value:0.32))),(34):Named(Bool(false),"mirror")},storage_order:[(0),(1),(2),(6),(7),(8),(9),(10),(17),(18),(19),(20),(21),(25),(34)]),matrices:(ids:(available:[],max:22),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Mul(to:Some(((15))),what:Some(((14)))),"triangle"),(14):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(15):Inline(Parametrized(offset:(x:Yes(Some(((14)))),y:Yes(Some(((15)))),z:Yes(Some(((16))))),rotate:(x:No(1.5707963267948966),y:No(0),z:No(3.141592653589793)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(16):Named(Mul(to:Some(((20))),what:Some(((18)))),"cylinder"),(17):Named(Teleport(first_portal:Some(((21))),second_portal:Some(((19))),what:Some(((13)))),"teleported_triangle"),(18):Named(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),"cylinder_origin"),(19):Named(Parametrized(offset:(x:No(0),y:No(0),z:No(3.99)),rotate:(x:No(0),y:No(0),z:Yes(Some(((17))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"b"),(20):Named(Exact(i:(x:No(1),y:No(0),z:No(0)),j:(x:Yes(Some(((22)))),y:Yes(Some(((23)))),z:Yes(Some(((24))))),k:(x:No(0),y:No(0),z:No(1)),pos:(x:No(0),y:No(0),z:No(0))),"skew"),(21):Named(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:Yes(Some(((17))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"a")},storage_order:[(0),(13),(16),(21),(19),(20),(18),(17)]),objects:(ids:(available:[],max:12),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Flat(kind:Simple(Some(((13)))),is_inside:(("if ((a_mat_inv * pos).z < 0.) return NOT_INSIDE;\n\nint material = solid_0_M;\nif ((a_mat_inv * (cylinder_origin_mat * (cylinder_mat_inv * pos))).y > cut_offset_u) material = solid_1_M;\nif (cut_enabled_u == 0) material = triangle_white_M;\n\nreturn is_inside_triangle(x, y, 2.0, 1.3, 0.05, material, triangle_black_M);"))),"triangle"),(7):Named(Complex(kind:Simple(Some(((16)))),intersect:(("if (cut_enabled_u == 0) return scene_intersection_none;\n\nreturn SceneIntersection(knife_M, cylinder(r, vec3(0., 0., 0.), vec3(0., cut_length_u, 0.), 1.0), false);"))),"cylinder"),(8):Named(Flat(kind:Portal(Some(((21))),Some(((19)))),is_inside:(("if (y > cut_offset_u) return NOT_INSIDE;\n\nreturn is_inside_portal(\n  circle_distance(x, y), \n  1.0, \n  0.07,\n  0.01,\n  portal_blue_M, \n  portal_orange_M, \n  solid_0_M, \n  solid_0_M,\n  back,\n  first\n);"))),"portal1"),(9):Named(Flat(kind:Portal(Some(((21))),Some(((19)))),is_inside:(("if (y < cut_offset_u) return NOT_INSIDE;\n\nreturn is_inside_portal(\n  circle_distance(x, y), \n  1.0, \n  0.07,\n  0.01,\n  portal_blue_M, \n  portal_orange_M, \n  solid_1_M, \n  solid_1_M,\n  back,\n  first\n);"))),"portal2"),(10):Named(Complex(kind:Simple(Some(((21)))),intersect:(("if (cut_enabled_u == 0) return scene_intersection_none;\n\nfloat v = sqrt(1.0-sqr(cut_offset_u));\nvec3 a = vec3(-v, cut_offset_u, 0.);\nvec3 b = vec3(v, cut_offset_u, 0.);\nvec4 speed = a_mat_inv * -vec4(vx_u, vy_u, vz_u, 0.) * cut_length_u;\nvec3 c = a + speed.xyz;\nvec3 d = b + speed.xyz;\n\nSurfaceIntersection first = triangle(r, a, b, c);\nSurfaceIntersection second = triangle(r, b, c, d);\n\nif (nearer(first, second)) {\nreturn SceneIntersection(knife_M, second, false);\n} else {\nreturn SceneIntersection(knife_M, first, false);\n}"))),"prism"),(11):Named(Flat(kind:Simple(Some(((17)))),is_inside:(("if ((b_mat_inv * pos).z > 0.) return NOT_INSIDE;\n\nint material = solid_0_M;\nif ((a_mat_inv * (cylinder_origin_mat * (cylinder_mat_inv * (b_to_a_mat_teleport * pos)))).y > cut_offset_u) material = solid_1_M;\nif (cut_enabled_u == 0) material = triangle_white_M;\n\nreturn is_inside_triangle(x, y, 2.0, 1.3, 0.05, material, triangle_black_M);"))),"teleported triangle")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)]),cameras:(ids:(available:[],max:3),storage:{(0):Named((look_at:MatrixCenter(Some(((21)))),alpha:1.2838561583894414,beta:1.02149951726199,r:3.1818181818182043),"a"),(1):Named((look_at:MatrixCenter(Some(((19)))),alpha:-1.603235901178129,beta:0.8009996393025002,r:3.1818181818182043),"b"),(2):Named((look_at:MatrixCenter(Some(((13)))),alpha:-4.880766004727494,beta:1.0740000041723332,r:3.1818181818182043),"triangle")},storage_order:[(0),(1),(2)]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:22),storage:{(0):Named(Simple(color:(0.7647179,0.7024815,0.061205085),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_yellow"),(1):Named(Simple(color:(0.029196177,0.029196177,0.029196177),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_black"),(2):Named(Simple(color:(0.8458183,0.07454156,0.07454156),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_red"),(3):Named(Simple(color:(0.18068509,0.18068509,0.18068509),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_gray"),(4):Named(Simple(color:(0.116810285,0.26798066,0.9083436),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_blue"),(5):Named(Simple(color:(0.15478948,0.73873776,0.2186588),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7529411764705882,0.7529411764705882,0.7529411764705882),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.15478948,0.73873776,0.2186588), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(1.16810285e-1, 2.6798066e-1, 9.083436e-1), 5e-1, true, 1.0, 3e-1);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black"),(21):Named(Simple(color:(0.6745098039215687,0.6745098039215687,0.6745098039215687),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"knife")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14),(21)]),library:(ids:(available:[],max:4),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(2):Named((("int is_inside_triangle(float x, float y, float angle, float width, float border, int inner_m, int border_m) {\n  float value = width * 0.7 - abs(x)*angle;\n  if (between(border, y, value - border * angle)) {\n    return inner_m;\n  } else if (between(0., y, value)) {\n    return border_m;\n  } else {\n    return NOT_INSIDE;\n  }\n}")),"triangle"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y) {\n  return max(abs(x), abs(y) - 1.);\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"is_inside_portal")},storage_order:[(0),(1),(2),(3)]),animations_filters:(uniforms:({((18)):true,((7)):true,((20)):true,((1)):false,((21)):true,((0)):false,((10)):false,((17)):true,((25)):false,((9)):true,((8)):true,((6)):false,((19)):true,((2)):false}),matrices:({((20)):false,((16)):false,((0)):false,((19)):false,((21)):false,((18)):false,((17)):false,((13)):false}),cameras:({((1)):true,((2)):true,((0)):true})),elements_descriptions:(uniforms:({((20)):(help_description:None,overrided_name:"Cut enabled"),((7)):(help_description:None,overrided_name:"V_x"),((17)):(help_description:None,overrided_name:"Cut angle"),((8)):(help_description:None,overrided_name:"V_y"),((21)):(help_description:None,overrided_name:"Time"),((18)):(help_description:None,overrided_name:"Cut offset"),((19)):(help_description:None,overrided_name:"Teleport light"),((9)):(help_description:None,overrided_name:"V_z")}),matrices:({}),cameras:({((0)):(help_description:None,overrided_name:"Look at blue portal"),((1)):(help_description:None,overrided_name:"Look at orange portal"),((2)):(help_description:None,overrided_name:"Look at triangle")})),user_uniforms:(uniforms:({((21)):false,((1)):false,((8)):false,((19)):false,((2)):false,((10)):false,((0)):false,((6)):false,((7)):false,((17)):false,((9)):false,((18)):false,((20)):false,((25)):false}),matrices:({((21)):false,((0)):false,((16)):false,((17)):false,((19)):false,((18)):false,((20)):false,((13)):false})),animation_stages:(ids:(available:[],max:3),storage:{(0):Named((name:(eng:"Take portals and object",rus:"Возьмём порталы и объект"),description:Some((eng:"Let\'s take pair of regular portals and the object that comes into that portal. This object has its speed, and it can move according to time changes.",rus:"Давайте возьмём пару обычных порталов и объект, который в них входит. У данного объекта есть скорость, и он может двигаться в соответствии с изменением времени.")),uniforms:({((8)):FromDev,((25)):FromDev,((18)):FromDev,((10)):FromDev,((19)):FromDev,((20)):FromDev,((21)):ProvidedToUser,((0)):FromDev,((2)):FromDev,((1)):FromDev,((9)):FromDev,((17)):FromDev,((6)):FromDev,((7)):FromDev}),matrices:({((13)):FromDev,((19)):FromDev,((18)):FromDev,((0)):FromDev,((17)):FromDev,((20)):FromDev,((21)):FromDev,((16)):FromDev}),original_cam_button:false,set_cam:None,cams:{((0)):false,((2)):false,((1)):false}),"take portals"),(1):Named((name:(eng:"We can cut portals",rus:"Мы можем обрезать порталы"),description:Some((eng:"We can cut the blue portal into two parts by line. We must make this cut on the other side because portals must have the same shape on both sides. Now we have two pairs of portals: red and green.\n\nYou can change the cutting line position.\n\nMost important to see that two portals form one continuous portal because they are located nearby. Neither image nor teleported object changed because of this cutting. So, this cutting exists only in our heads, and there is no way to determine is portal unified or consisting of many parts by face value.\n\nSimilarly, we can cut the portal into infinitely many other portals, or consider that every atom of the portal is a portal.\n\n*Above all, the relative position of portal parts must be preserved both on input and output.*",rus:"Мы можем разрезать голубой портал на две части одной прямой. Так как порталы обязаны сохранять одинаковую форму с двух сторон, мы должны с другой стороны сделать то же самое. В итоге мы имеем две пары *разных* порталов: красную и зелёную.\n\nВы можете перемещать положение прямой на портале.\n\nГлавное что здесь нужно увидеть - хоть у нас и есть 2 пары разных порталов, они в итоге образуют один непрерывный портал, потому что находятся физически рядом. Так как мы составили один портал из двух, у нас не поменялось *ничего* - ни картинка, ни телепортация объекта. Поэтому данное разрезание существует только в наших головах, и не существует способа по внешним признакам опознать когда портал является единым или состоит из множества связанных частей.\n\nТаким же образом можно разрезать этот портал ещё на бесконечное число других порталов, и вообще можно считать каждый его атом отдельным порталом.\n\n*Главное чтобы сохранялось их относительное положение на входе и на выходе.*")),uniforms:({((8)):FromDev,((1)):FromDev,((25)):FromDev,((6)):FromDev,((2)):FromDev,((20)):FromDev,((10)):FromDev,((0)):FromDev,((17)):ProvidedToUser,((9)):FromDev,((21)):Changed(Some(((33)))),((18)):ProvidedToUser,((19)):ChangedAndToUser(Some(((27)))),((7)):FromDev}),matrices:({((18)):FromDev,((0)):FromDev,((17)):FromDev,((21)):FromDev,((13)):FromDev,((20)):FromDev,((16)):FromDev,((19)):FromDev}),original_cam_button:false,set_cam:None,cams:{((0)):false,((2)):false,((1)):false}),"we can cut portals"),(2):Named((name:(eng:"It acts like knives",rus:"Они ведут себя как ножи"),description:Some((eng:"The edge of the two portals must act like a knife, which cuts every incoming object. Knives here are represented by gray color.\n\n*This knife must be directed towards incoming object speed.*\n\nOn the output all cut parts of the object are joined, therefore this cutting isn\'t changing anything.\n\nPortals must cut on the inner edge, and this is fair to say that portal must cut object on the external edge too. In ~real life~ portals didn\'t kill us because borders always have physical objects which prevent object to go further, like this blue/orange outline on portals.",rus:"Граница двух порталов должна вести себя как нож, который на входе обрезает все объекты, входящие в него. Здесь ножи представлены серым цветом.\n\n*Этот нож обязан быть направлен по направлению скорости входящего объекта.*\n\nНа выходе объект восстанавливается обратно, поэтому его разрезание не меняет ничего.\n\nВидно, что раз порталы обрезают объект по внутренней границе, то они должны так же обрезать его по внешней границе. В ~реальной жизни~ игре границы порталов нас не убивают, потому что на границах стоят физические объекты. Как, например, здесь голубая и оранжевая обводка вокруг портала.")),uniforms:({((21)):ProvidedToUser,((17)):ChangedAndToUser(Some(((31)))),((10)):FromDev,((7)):ProvidedToUser,((1)):FromDev,((20)):ChangedAndToUser(Some(((30)))),((0)):FromDev,((19)):ChangedAndToUser(Some(((29)))),((2)):FromDev,((25)):FromDev,((6)):FromDev,((18)):ChangedAndToUser(Some(((32)))),((9)):FromDev,((8)):ProvidedToUser}),matrices:({((16)):FromDev,((19)):FromDev,((13)):FromDev,((17)):FromDev,((20)):FromDev,((21)):FromDev,((18)):FromDev,((0)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((0)):true,((2)):true,((1)):true}),"it acts like knifes")},storage_order:[(0),(1),(2)]),current_stage:Some(((2))),dev_stage:(uniforms:({((34)):Bool(false),((9)):Float((min:Some(-1),max:Some(1),value:-1)),((21)):Progress(0),((17)):Angle(0),((6)):Progress(0),((7)):Float((min:Some(-0.5),max:Some(0.5),value:0)),((8)):Float((min:Some(-0.5),max:Some(0.5),value:-0.01)),((0)):Float((min:Some(0),max:None,value:4)),((18)):Float((min:Some(-1),max:Some(1),value:0)),((19)):Bool(true),((10)):Formula(("(user_time * 2 - 1.0)")),((20)):Bool(false),((25)):Float((min:None,max:None,value:0.3)),((1)):Float((min:Some(0),max:None,value:4)),((2)):Float((min:Some(0),max:None,value:4))}),matrices:({((16)):Mul(to:Some(((20))),what:Some(((18)))),((20)):Exact(i:(x:No(1),y:No(0),z:No(0)),j:(x:Yes(Some(((22)))),y:Yes(Some(((23)))),z:Yes(Some(((24))))),k:(x:No(0),y:No(0),z:No(1)),pos:(x:No(0),y:No(0),z:No(0))),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((19)):Parametrized(offset:(x:No(0),y:No(0),z:No(3.99)),rotate:(x:No(0),y:No(0),z:Yes(Some(((17))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),((17)):Teleport(first_portal:Some(((21))),second_portal:Some(((19))),what:Some(((13)))),((13)):Mul(to:Some(((15))),what:Some(((14)))),((18)):Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),((21)):Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:Yes(Some(((17))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))})),use_time:false)