(desc:(eng:"",rus:""),cam:(look_at:(0,0,0),alpha:-4.370019663089131,beta:1.5026034545898557,r:3.558410273836873,offset_after_material:0.0002),uniforms:(ids:(available:[],max:47),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Named(Bool(false),"disable_cone"),(4):Named(Formula(("(px*px + py*py + pz*pz)^0.5")),"plen"),(5):Named(Formula(("px/plen")),"px_norm"),(6):Named(Bool(false),"teleport_light"),(7):Inline(Formula(("deg2rad(44 - 1 + angle1 * 2)"))),(8):Inline(Formula(("deg2rad(325 - 1 + angle2 * 2)"))),(9):Inline(Formula(("atan2(-1, 1)"))),(10):Named(Formula(("py/plen")),"py_norm"),(11):Inline(Angle(0)),(12):Named(Formula(("pz/plen")),"pz_norm"),(13):Inline(Formula(("((time * speed) % 1) * 2 * pi()"))),(14):Named(Formula(("acos(pz_norm)")),"an1"),(15):Named(Formula(("atan2(py_norm, px_norm)")),"an2"),(16):Inline(Float((min:None,max:None,value:-1))),(17):Named(Float((min:None,max:None,value:0.08)),"size"),(18):Inline(Formula(("cos(an2) * cos(an1)"))),(19):Named(Float((min:None,max:None,value:-1)),"px"),(20):Named(Float((min:None,max:None,value:0)),"py"),(21):Named(Float((min:None,max:None,value:1)),"pz"),(22):Inline(Formula(("sin(an2) * cos(an1)"))),(23):Inline(Formula(("-sin(an1)"))),(24):Inline(Formula(("-sin(an2)"))),(25):Inline(Formula(("cos(an2)"))),(26):Inline(Formula(("0"))),(27):Inline(Formula(("cos(an2) * sin(an1)"))),(28):Inline(Formula(("cos(an1)"))),(29):Inline(Formula(("sin(an2) * sin(an1)"))),(30):Named(Formula(("0.035")),"border_size"),(31):Named(Formula(("0.01")),"black_border_size"),(32):Inline(Float((min:None,max:None,value:-1))),(33):Inline(Float((min:None,max:None,value:1))),(34):Inline(Float((min:None,max:None,value:0.15))),(35):Inline(Float((min:None,max:None,value:-1))),(36):Inline(Float((min:None,max:None,value:0))),(37):Inline(Float((min:None,max:None,value:1))),(38):Inline(Float((min:None,max:None,value:0.94))),(39):Inline(Formula(("sin(pi())"))),(40):Inline(Formula(("-0.08748866352590793"))),(41):Inline(Formula(("10.02520785505306"))),(42):Inline(Formula(("1"))),(43):Inline(Formula(("0.08"))),(44):Named(Bool(false),"disable_portal"),(45):Named(Float((min:Some(0),max:Some(10),value:1)),"cone_scale1"),(46):Named(Float((min:Some(0),max:Some(10),value:1)),"cone_scale2")},storage_order:[(0),(1),(2),(6),(30),(31),(19),(20),(21),(17),(3),(4),(5),(10),(12),(14),(15),(44),(45),(46)]),matrices:(ids:(available:[(8),(9),(10),(11),(12),(15),(16),(17),(18),(19),(20),(21),(22),(23),(27),(28),(29),(30),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41)],max:43),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"box"),(2):Named(Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((1)))),"box_b"),(3):Inline(Exact(i:(x:Yes(Some(((45)))),y:No(0),z:No(0)),j:(x:No(0),y:Yes(Some(((46)))),z:No(0)),k:(x:No(0),y:No(0),z:Yes(Some(((17))))),pos:(x:No(0),y:No(0),z:No(0)))),(4):Inline(Exact(i:(x:Yes(Some(((18)))),y:Yes(Some(((22)))),z:Yes(Some(((23))))),j:(x:Yes(Some(((24)))),y:Yes(Some(((25)))),z:Yes(Some(((26))))),k:(x:Yes(Some(((27)))),y:Yes(Some(((29)))),z:Yes(Some(((28))))),pos:(x:No(0),y:No(0),z:No(0)))),(5):Inline(Simple(offset:(0,0,-1.5),scale:1,rotate:(4.71238898038469,4.71238898038469,0),mirror:(false,false,false))),(6):Inline(Simple(offset:(0,0,-1.5),scale:1,rotate:(0,4.71238898038469,0),mirror:(true,false,false))),(7):Inline(Simple(offset:(0,-0.94,-1.5),scale:1,rotate:(3.141592653589793,3.3161255787892263,3.12413936106985),mirror:(false,false,false))),(13):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"a"),(14):Named(Simple(offset:(0,0,-1.5),scale:1,rotate:(0,4.71238898038469,0),mirror:(true,false,false)),"b0"),(24):Inline(Mul(to:Some(((25))),what:Some(((13))))),(25):Named(Mul(to:Some(((3))),what:Some(((4)))),"cone_apex"),(26):Inline(Mul(to:Some(((25))),what:Some(((14))))),(31):Inline(Simple(offset:(0,0,0.24),scale:1,rotate:(0.2792526803190927,0,0),mirror:(false,false,false))),(42):Inline(Simple(offset:(0,0.16,0.31),scale:1,rotate:(4.71238898038469,5.427973973702365,0),mirror:(false,false,false)))},storage_order:[(0),(13),(14),(25),(1),(2)]),objects:(ids:(available:[(3),(4),(5),(7),(8),(9),(10)],max:12),storage:{(0):Named(Complex(kind:Simple(Some(((1)))),intersect:(("int material = grid_gray_M;\n\nvec3 rad = vec3(room_size_x_u, room_size_y_u, room_size_z_u);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nif(tN > tF) return scene_intersection_none;\n\nfloat t = tN;\n\nvec4 pos4 = r.o + r.d * t;\n\nif (t < 0. || is_inside_cone(cone_apex_mat_inv * (a_mat_inv * (box_mat * pos4)))) t = tF;\n\npos4 = r.o + r.d * t;\n\nif (t < 0. || is_inside_cone(cone_apex_mat_inv * (a_mat_inv * (box_mat * pos4)))) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nint material_pos = 1;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n  material_pos = 2;\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n  material_pos = 3;\n}\n\nif (material_pos == 1 && pos.z > 0.) material = room_blue_M;\nif (material_pos == 1 && pos.z < 0.) material = room_green_M;\nif (material_pos == 2 && pos.x > 0.) material = room_yellow_M;\nif (material_pos == 2 && pos.x < 0.) material = room_red_M;\nif (material_pos == 3 && pos.y > 0.) material = room_black_M;\nif (material_pos == 3 && pos.y < 0.) material = room_gray_M;\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);")),in_subspace:Normal),"box"),(1):Named(Complex(kind:Simple(Some(((2)))),intersect:(("int material = grid_gray_M;\n\nvec3 rad = vec3(room_size_x_u, room_size_y_u, room_size_z_u);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nif(tN > tF) return scene_intersection_none;\n\nfloat t = tN;\n\nvec4 pos4 = r.o + r.d * t;\n\nif (t < 0. || !is_inside_cone(cone_apex_mat_inv * (b0_mat_inv * (box_b_mat * pos4)))) t = tF;\n\npos4 = r.o + r.d * t;\n\nif (t < 0. || !is_inside_cone(cone_apex_mat_inv * (b0_mat_inv * (box_b_mat * pos4)))) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nint material_pos = 1;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n  material_pos = 2;\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n  material_pos = 3;\n}\n\nif (material_pos == 1 && pos.z > 0.) material = room_blue_M;\nif (material_pos == 1 && pos.z < 0.) material = room_green_M;\nif (material_pos == 2 && pos.x > 0.) material = room_yellow_M;\nif (material_pos == 2 && pos.x < 0.) material = room_red_M;\nif (material_pos == 3 && pos.y > 0.) material = room_black_M;\nif (material_pos == 3 && pos.y < 0.) material = room_gray_M;\n\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);")),in_subspace:Normal),"box_b"),(2):Named(Complex(kind:Portal(Some(((13))),Some(((14)))),intersect:(("if (disable_portal_u == 1) return scene_intersection_none;\n\nif (disable_cone_u == 1) return scene_intersection_none;\n\nvec3 op = -r.o.xyz;\r\nfloat b = dot(op, r.d.xyz);\r\nfloat det = b*b - dot(op, op) + 1.0;\r\nif (det < 0.) return scene_intersection_none;\r\n\r\ndet = sqrt(det);\r\nfloat t = b - det;\r\nvec4 pos = r.o + r.d * t;\r\nbool inside_cone = is_inside_cone(cone_apex_mat_inv * pos);\r\nbool below_portal = pos.z < 0.;\r\nif (t < 0. || (inside_cone && below_portal) || (!inside_cone && !below_portal)) t = b + det;\r\n\r\npos = r.o + r.d * t;\r\ninside_cone = is_inside_cone(cone_apex_mat_inv * pos);\r\nbelow_portal = pos.z < 0.;\r\nif (t < 0. || (inside_cone && below_portal) || (!inside_cone && !below_portal)) return scene_intersection_none;\r\n\r\nvec3 n = normalize(pos.xyz);\r\n\r\nfloat u = atan(pos.z, pos.x);\r\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\r\n\r\nint material = TELEPORT;\r\nif (teleport_light_u == 0) {\r\n\tif (first) {\r\n\t\tmaterial = solid_1_M;\r\n\t} else {\r\n\t\tmaterial = solid_0_M;\r\n\t}\r\n}\r\n\r\nreturn SceneIntersection(material, SurfaceIntersection(true, t, u, v, n), false);")),in_subspace:Normal),"sphere"),(6):Named(Flat(kind:Portal(Some(((13))),Some(((14)))),is_inside:(("if (disable_portal_u == 1) return NOT_INSIDE;\n\nif (back && first) first = !first;\nif (!back && !first) first = !first;\n\nint result = ellipse_portal(x, y, false, first, TELEPORT);\n\nif (result == TELEPORT) return NOT_INSIDE;\n\nreturn result;")),in_subspace:Normal),"portal borders"),(11):Named(Complex(kind:Portal(Some(((24))),Some(((26)))),intersect:(("if (disable_cone_u == 1) return scene_intersection_none;\n\nfloat a = r.d.x * r.d.x + r.d.y * r.d.y - r.d.z * r.d.z;\r\nfloat b = 2.0 * (r.o.x * r.d.x + r.o.y * r.d.y - (r.o.z - 1.) * r.d.z);\r\nfloat c = r.o.x * r.o.x + r.o.y * r.o.y - (r.o.z - 1.) * (r.o.z - 1.);\r\n\r\nfloat det = b*b - 4.0 * a * c;\r\nif (det < 0.) return scene_intersection_none;\r\n\nfloat mul = 1.;\nif (a < 0.) mul = -1.;\n\r\ndet = sqrt(det);\r\nfloat t = (-b - det * mul) / (2.0 * a);\r\nvec4 pos = r.o + r.d * t;\r\n\nfloat posz_limit = 0.;\nif (disable_portal_u == 1) posz_limit = 1.;\n\nif (t < 0. || pos.z > posz_limit) t = (-b + det * mul) / (2.0 * a);\r\npos = r.o + r.d * t;\r\nif (t < 0. || pos.z > posz_limit) return scene_intersection_none;\r\n\r\nvec3 pos2 = pos.xyz - vec3(0., 0., 1.);\r\n\r\nvec3 n = normalize(vec3(pos2.x, pos2.y, -pos2.z));\r\n\r\nfloat u = length(pos2) / sqrt(2.0) * 2.0;\r\nfloat v = atan(pos2.y, pos2.x)/PI*6.;\r\n\nint material = solid_0_M;\nif (first) material = solid_1_M;\n\nif (teleport_light_u == 1) material = TELEPORT;\n\r\nreturn SceneIntersection(material, SurfaceIntersection(true, t, u, v, n), false);")),in_subspace:Normal),"cone")},storage_order:[(11),(6),(0),(1),(2)]),cameras:(ids:(available:[(0),(1)],max:8),storage:{(2):Inline((look_at:Coordinate((0,0,0)),alpha:-12.165700075225216,beta:0.8745012875795398,r:1.9756587551882376,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(3):Inline((look_at:Coordinate((0.14,0.14,0.135)),alpha:-13.361797514201355,beta:0.845608892008663,r:0.048017242074020104,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(4):Inline((look_at:Coordinate((0,0,0.135)),alpha:-12.511239557476001,beta:0.01,r:0.07733224853263031,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(5):Inline((look_at:Coordinate((0,0,0)),alpha:-12.355556990907772,beta:1.2000013870894954,r:1.9756587551882376,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(6):Inline((look_at:Coordinate((0,0,0)),alpha:-18.37206727166386,beta:0.8583911349773405,r:2.395800000000002,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(7):Inline((look_at:Coordinate((0.1,0.1,0.1)),alpha:-12.00232910790965,beta:0.7903495330214368,r:1.4876033057851326,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)))},storage_order:[]),textures:(ids:(available:[],max:0),storage:{},storage_order:[]),materials:(ids:(available:[(15),(17),(18),(19)],max:22),storage:{(0):Named(Simple(color:(0.8980392156862745,0.8313725490196079,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_yellow"),(1):Named(Simple(color:(0.050980392156862744,0.050980392156862744,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_black"),(2):Named(Simple(color:(0.9058823529411765,0.29411764705882354,0.29411764705882354),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_red"),(3):Named(Simple(color:(0.2235294117647059,0.2235294117647059,0.2235294117647059),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_gray"),(4):Named(Simple(color:(0.3137254901960784,0.38823529411764707,0.9254901960784314),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_blue"),(5):Named(Simple(color:(0.2627450980392157,0.8470588235294118,0.30196078431372547),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:2,grid_coef:0.3,grid2:false,grid3:false),"grid_gray"),(9):Named(Complex(code:(("return material_simple2(hit, r, vec3(1e0, 2.4376154e-1, 2.4376154e-1), 5e-1, true, 4e0, 3e-1, true, false);"))),"solid_0"),(10):Named(Complex(code:(("return material_simple2(hit, r, vec3(2.4376106e-1, 1e0, 2.5302637e-1), 5e-1, true, 4e0, 3e-1, true, false);"))),"solid_1"),(11):Named(Complex(code:(("return material_simple(hit, r, vec3(1.8710661e-1, 1.9761491e-1, 1e0), 5e-1, true, 4e0, 3e-1);"))),"solid_2"),(12):Named(Complex(code:(("return material_simple(hit, r, vec3(1e0, 9.7995126e-1, 1.5473223e-1), 5e-1, true, 4e0, 3e-1);"))),"solid_3"),(13):Named(Complex(code:(("return material_simple(hit, r, vec3(7.078609e-1, 2.0059586e-1, 1e0), 5e-1, true, 4e0, 3e-1);"))),"solid_4"),(14):Named(Complex(code:(("return material_simple(hit, r, vec3(1e0, 1.8440866e-1, 6.6435695e-1), 5e-1, true, 4e0, 3e-1);"))),"solid_5"),(16):Named(Complex(code:(("return material_simple(hit, r, vec3(2.823529411764706e-1, 9.84313725490196e-1, 7.333333333333333e-1), 5e-1, true, 4e0, 3e-1);"))),"solid_7"),(20):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"solid_black"),(21):Named(Complex(code:(("return material_simple(hit, r, vec3(9.176470588235294e-1, 9.176470588235294e-1, 9.176470588235294e-1) * (PI + atan(hit.u, hit.v))/(2.0*PI), 5e-1, false, 4e0, 3e-1);"))),"solid_white")},storage_order:[(0),(2),(1),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(16),(20),(21)]),intersection_materials:(ids:(available:[],max:0),storage:{},storage_order:[]),library:(ids:(available:[],max:4),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n        return TELEPORT;\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}\n\nint ellipse_portal(float x, float y, bool back, bool first, int not_teleport_material) {\nfloat distance = 0.;\ndistance = circle_distance(x, y) * (1. + border_size_u + black_border_size_u * 2.);\n\nreturn is_inside_portal(\n  distance, \n  1., \n  border_size_u,\n  black_border_size_u,\n  portal_orange_M, \n  portal_blue_M, \n  not_teleport_material, \n  not_teleport_material, \n  back,\n  first\n);\n}\n\nbool definitely_not_in_portal(float x, float y) {\n  return !(abs(x) < 2.2 && abs(y) < 2.2);\n}")),"portal"),(2):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(room_size_x_u, room_size_y_u, room_size_z_u);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nint material_pos = 1;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n  material_pos = 2;\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n  material_pos = 3;\n}\n\nif (material_pos == 1 && pos.z > 0.) material = room_blue_M;\nif (material_pos == 1 && pos.z < 0.) material = room_green_M;\nif (material_pos == 2 && pos.x > 0.) material = room_yellow_M;\nif (material_pos == 2 && pos.x < 0.) material = room_red_M;\nif (material_pos == 3 && pos.y > 0.) material = room_black_M;\nif (material_pos == 3 && pos.y < 0.) material = room_gray_M;\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(3):Named((("bool is_inside_cone(vec4 pos) {\n  if (pos.z < 0.) {\n    return pos.x * pos.x + pos.y * pos.y - sqr(pos.z - 1.) < 0.;\n  } else {\n    return false;\n  }\n}")),"inside_cone")},storage_order:[(0),(1),(2),(3)]),animations_filters:(uniforms:({((44)):true,((42)):true,((40)):true,((14)):false,((5)):false,((52)):true,((23)):true,((48)):true,((37)):true,((31)):false,((30)):false,((45)):true,((38)):true,((36)):true,((3)):true,((7)):true,((35)):true,((18)):true,((9)):true,((12)):false,((4)):false,((53)):true,((10)):false,((49)):true,((51)):true,((43)):true,((24)):true,((46)):true,((41)):true,((6)):true,((16)):false,((54)):true,((1)):false,((0)):false,((17)):true,((29)):false,((47)):true,((19)):true,((8)):true,((20)):true,((33)):true,((32)):true,((21)):true,((22)):true,((34)):true,((15)):false,((2)):false,((50)):true}),matrices:({((14)):true,((23)):false,((20)):false,((0)):false,((46)):false,((13)):false,((19)):false,((15)):false,((54)):false,((24)):false,((45)):false,((22)):false,((18)):true,((1)):false,((51)):false,((25)):false,((21)):false,((44)):true,((16)):false,((2)):false,((17)):false,((47)):false}),cameras:({((2)):true,((1)):false,((0)):false})),elements_descriptions:(uniforms:({((24)):(help_description:None,overrided_name:"Z"),((10)):(help_description:None,overrided_name:"Filter teleported"),((21)):(help_description:None,overrided_name:"z of Eigenvector"),((37)):(help_description:None,overrided_name:""),((19)):(help_description:None,overrided_name:"x of Eigenvector"),((44)):(help_description:None,overrided_name:"Disable portal"),((40)):(help_description:None,overrided_name:""),((7)):(help_description:None,overrided_name:"Progress"),((45)):(help_description:None,overrided_name:"Cone scale1"),((47)):(help_description:None,overrided_name:""),((14)):(help_description:None,overrided_name:""),((6)):(help_description:None,overrided_name:"Teleport light"),((12)):(help_description:None,overrided_name:"Teleport light for subspace"),((17)):(help_description:None,overrided_name:"Apex point distance"),((22)):(help_description:None,overrided_name:"X"),((52)):(help_description:None,overrided_name:""),((38)):(help_description:None,overrided_name:"Progress"),((30)):(help_description:None,overrided_name:"Border size"),((36)):(help_description:None,overrided_name:""),((50)):(help_description:None,overrided_name:""),((18)):(help_description:None,overrided_name:"Teleported parts count"),((3)):(help_description:None,overrided_name:"Disable cone"),((34)):(help_description:None,overrided_name:"Offset"),((53)):(help_description:None,overrided_name:""),((23)):(help_description:None,overrided_name:"Y"),((48)):(help_description:None,overrided_name:""),((42)):(help_description:None,overrided_name:""),((33)):(help_description:None,overrided_name:"Scale"),((41)):(help_description:None,overrided_name:""),((31)):(help_description:None,overrided_name:"Black border size"),((43)):(help_description:None,overrided_name:""),((32)):(help_description:None,overrided_name:"Angle"),((54)):(help_description:None,overrided_name:""),((49)):(help_description:None,overrided_name:""),((20)):(help_description:None,overrided_name:"y of Eigenvector"),((46)):(help_description:None,overrided_name:"Cone scale2"),((29)):(help_description:None,overrided_name:"Portal shape"),((35)):(help_description:None,overrided_name:"Use teleported matrix"),((51)):(help_description:None,overrided_name:""),((8)):(help_description:None,overrided_name:"Subspace teleportation degree"),((9)):(help_description:None,overrided_name:"Regular teleportation degree"),((15)):(help_description:None,overrided_name:"")}),matrices:({((18)):(help_description:None,overrided_name:"Rod"),((14)):(help_description:None,overrided_name:"Blue portal"),((44)):(help_description:None,overrided_name:""),((13)):(help_description:None,overrided_name:"")}),cameras:({((0)):(help_description:None,overrided_name:"Orange portal"),((1)):(help_description:None,overrided_name:"Blue portal"),((2)):(help_description:None,overrided_name:"")})),user_uniforms:(uniforms:({((1)):false,((10)):false,((30)):false,((3)):true,((6)):true,((32)):false,((53)):false,((15)):false,((18)):true,((40)):false,((49)):false,((24)):false,((22)):false,((29)):false,((41)):false,((4)):false,((21)):false,((43)):false,((31)):false,((12)):false,((44)):false,((19)):false,((17)):false,((42)):false,((50)):false,((7)):true,((48)):false,((38)):false,((5)):false,((33)):false,((9)):true,((37)):false,((8)):true,((0)):false,((54)):false,((2)):false,((23)):false,((52)):false,((14)):false,((46)):false,((20)):false,((36)):false,((34)):false,((47)):false,((51)):false,((45)):false,((35)):false}),matrices:({((13)):false,((16)):false,((25)):false,((2)):false,((19)):false,((51)):false,((54)):false,((15)):false,((45)):false,((44)):false,((24)):false,((20)):false,((18)):true,((47)):false,((0)):false,((21)):false,((14)):false,((46)):false,((1)):false,((23)):false,((22)):false,((17)):false})),animation_stages:(ids:(available:[],max:5),storage:{(0):Named((name:(eng:"Rotated",rus:"Rotated"),description:None,uniforms:({((44)):FromDev,((4)):FromDev,((50)):FromDev,((17)):Changed(Some(((34)))),((49)):FromDev,((54)):FromDev,((6)):FromDev,((36)):FromDev,((12)):FromDev,((10)):FromDev,((15)):FromDev,((3)):FromDev,((41)):FromDev,((31)):FromDev,((52)):FromDev,((45)):FromDev,((1)):FromDev,((48)):FromDev,((21)):Changed(Some(((33)))),((30)):FromDev,((37)):FromDev,((38)):FromDev,((14)):FromDev,((20)):Changed(Some(((32)))),((46)):FromDev,((40)):FromDev,((43)):FromDev,((0)):FromDev,((51)):FromDev,((35)):FromDev,((19)):Changed(Some(((16)))),((53)):FromDev,((42)):FromDev,((5)):FromDev,((2)):FromDev,((47)):FromDev}),matrices:({((2)):FromDev,((13)):FromDev,((25)):FromDev,((1)):FromDev,((0)):FromDev,((14)):Changed(Some(((5))))}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"rotation"),(1):Named((name:(eng:"2D case",rus:"2D case"),description:None,uniforms:({((4)):FromDev,((6)):FromDev,((14)):FromDev,((0)):FromDev,((19)):Changed(Some(((35)))),((3)):FromDev,((10)):FromDev,((2)):FromDev,((20)):Changed(Some(((36)))),((17)):Changed(Some(((38)))),((31)):FromDev,((21)):Changed(Some(((37)))),((5)):FromDev,((30)):FromDev,((12)):FromDev,((1)):FromDev,((15)):FromDev}),matrices:({((13)):FromDev,((0)):FromDev,((25)):FromDev,((2)):FromDev,((14)):Changed(Some(((6)))),((1)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"2d case"),(2):Named((name:(eng:"Spiral",rus:"Spiral"),description:None,uniforms:({((10)):FromDev,((12)):FromDev,((31)):FromDev,((4)):FromDev,((20)):Changed(Some(((41)))),((14)):FromDev,((5)):FromDev,((15)):FromDev,((3)):FromDev,((6)):FromDev,((2)):FromDev,((0)):FromDev,((1)):FromDev,((30)):FromDev,((21)):Changed(Some(((42)))),((19)):Changed(Some(((40)))),((17)):Changed(Some(((43))))}),matrices:({((0)):FromDev,((1)):FromDev,((13)):FromDev,((25)):FromDev,((14)):Changed(Some(((7)))),((2)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"spiral"),(3):Named((name:(eng:"Explore",rus:"Explore"),description:None,uniforms:({((0)):FromDev,((2)):FromDev,((12)):FromDev,((10)):FromDev,((15)):FromDev,((14)):FromDev,((17)):ProvidedToUser,((3)):FromDev,((4)):FromDev,((20)):ProvidedToUser,((5)):FromDev,((19)):ProvidedToUser,((30)):FromDev,((21)):ProvidedToUser,((1)):FromDev,((45)):FromDev,((6)):FromDev,((44)):FromDev,((31)):FromDev,((46)):FromDev}),matrices:({((25)):FromDev,((14)):ProvidedToUser,((1)):FromDev,((2)):FromDev,((13)):FromDev,((0)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"Explore"),(4):Named((name:(eng:"Explore2",rus:"Explore2"),description:None,uniforms:({((19)):ProvidedToUser,((21)):ProvidedToUser,((12)):FromDev,((44)):ProvidedToUser,((1)):FromDev,((45)):ProvidedToUser,((0)):FromDev,((4)):FromDev,((15)):FromDev,((5)):FromDev,((31)):FromDev,((30)):FromDev,((46)):ProvidedToUser,((3)):FromDev,((17)):ProvidedToUser,((10)):FromDev,((2)):FromDev,((20)):ProvidedToUser,((6)):FromDev,((14)):FromDev}),matrices:({((2)):FromDev,((14)):ProvidedToUser,((0)):FromDev,((13)):FromDev,((25)):FromDev,((1)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:true),"Explore2")},storage_order:[(0),(1),(2),(3),(4)]),current_stage:Animation(((3))),dev_stage:(uniforms:({((6)):Bool(false),((17)):Float((min:None,max:None,value:0.08)),((44)):Bool(false),((0)):Float((min:Some(0),max:None,value:4)),((30)):Formula(("0.035")),((15)):Formula(("atan2(py_norm, px_norm)")),((14)):Formula(("acos(pz_norm)")),((45)):Float((min:Some(0),max:Some(10),value:1)),((1)):Float((min:Some(0),max:None,value:4)),((5)):Formula(("px/plen")),((4)):Formula(("(px*px + py*py + pz*pz)^0.5")),((10)):Formula(("py/plen")),((20)):Float((min:None,max:None,value:0)),((3)):Bool(false),((2)):Float((min:Some(0),max:None,value:4)),((21)):Float((min:None,max:None,value:1)),((31)):Formula(("0.01")),((46)):Float((min:Some(0),max:Some(10),value:1)),((19)):Float((min:None,max:None,value:-1)),((12)):Formula(("pz/plen"))}),matrices:({((1)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((2)):Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((1)))),((13)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((25)):Mul(to:Some(((3))),what:Some(((4)))),((14)):Simple(offset:(0,0,-1.5),scale:1,rotate:(0,4.71238898038469,0),mirror:(true,false,false))})),animations:(ids:(available:[],max:0),storage:{},storage_order:[]),use_time:false,skybox:None)