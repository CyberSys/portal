(desc:(eng:"Portal in the shape of the cylinder. With it you can do many useful things: table without legs, portal armor, contactless stick. With cylindric portal you can pick locks or do some surgeries without dissection. Incredibly interesting and useful thing.\n\nUPD 03.03.2024: turns out this was already in Polycut and is called Catenoids. If you enable the second side, you get a 1-in-1 picture from Polycut.",rus:"Портал в форме цилиндра. С помощью него можно создать очень много полезных штук: стол без ножек, портальная броня, бесконтактная палка. С помощью цилиндрического портала можно взламывать замки или делать некоторые операции без вскрытия. Невероятно интересная и полезная штука!\n\nUPD 03.03.2024: оказывается это уже было в Polycut и называется Catenoids. Если включить вторую сторону, то получается 1-в-1 картинка из Polycut."),cam:(look_at:(0,0,0),alpha:1.4751068381694619,beta:1.207755910158157,r:3.914251301220411,offset_after_material:0.00025),uniforms:(ids:(available:[],max:65),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Bool(false),"mirror"),(9):Named(Float((min:Some(0),max:Some(5),value:0.5)),"cylinder_size"),(10):Named(Bool(false),"enable_human"),(11):Named(Float((min:Some(0),max:None,value:0.66)),"orig_cylinder_radius"),(12):Inline(Formula(("-cylinder_radius"))),(13):Inline(Formula(("-cylinder_radius"))),(14):Named(Progress(1),"cylinder_progress"),(15):Named(Float((min:Some(0),max:None,value:0.66)),"table_h"),(16):Named(Float((min:Some(0),max:None,value:1)),"table_w"),(17):Named(Float((min:Some(0),max:None,value:1.16)),"table_height"),(18):Inline(Formula(("table_height+table_leg_width-table_width"))),(19):Named(Float((min:Some(0),max:None,value:0.05)),"table_leg_width"),(20):Named(Float((min:Some(0),max:None,value:0.03)),"table_width"),(21):Inline(Formula(("table_h-table_leg_width"))),(22):Inline(Formula(("table_w-table_leg_width"))),(23):Inline(Formula(("table_h-table_leg_width"))),(24):Inline(Formula(("-(table_w-table_leg_width)"))),(25):Inline(Formula(("-(table_h-table_leg_width)"))),(26):Inline(Formula(("table_w-table_leg_width"))),(27):Inline(Formula(("-(table_h-table_leg_width)"))),(28):Inline(Formula(("-(table_w-table_leg_width)"))),(29):Inline(Formula(("-table_height/2"))),(30):Named(Progress(0),"wear_portal_legs"),(31):Inline(Formula(("table_height/2-table_width-(1-wear_portal_legs)*(table_height+0.2)"))),(32):Inline(Formula(("-atan(0.4/1.3)"))),(33):Named(Progress(0),"human_progress"),(34):Inline(Formula(("0.82 + (1.-human_progress)*(2.21-0.82)"))),(35):Inline(Formula(("0.82 + (1.-human_progress)*(2.21-0.82)"))),(36):Inline(Formula(("0.82 + (1.-human_progress)*(2.21-0.82)"))),(37):Inline(Formula(("-0.55-(1.-human_progress)*(2.1-0.55)"))),(38):Inline(Formula(("0.55+(1.-human_progress)*(2.1-0.55)"))),(39):Inline(Formula(("-0.55-(1.-human_progress)*(2.1-0.55)"))),(40):Inline(Formula(("0.82 + (1.-human_progress)*(2.21-0.82)"))),(41):Inline(Formula(("atan(0.4/1.3)"))),(42):Inline(Formula(("\n"))),(43):Inline(Formula(("0.4"))),(44):Named(Bool(false),"enable_triangle"),(45):Named(Bool(false),"enable_table"),(46):Named(Bool(true),"enable_cylinder"),(47):Inline(Bool(true)),(48):Named(Progress(0),"triangle_pos"),(49):Inline(Bool(true)),(50):Inline(Formula(("-1.3+triangle_pos*2.6"))),(51):Inline(Progress(1)),(52):Inline(Bool(true)),(53):Inline(Progress(1)),(54):Inline(Bool(true)),(55):Inline(Progress(1)),(56):Inline(Bool(true)),(57):Inline(Formula(("-4+table_leg_width+(1-wear_portal_legs)*(table_height+0.2)"))),(58):Inline(Bool(true)),(59):Inline(Progress(1)),(60):Inline(Bool(true)),(61):Inline(Bool(false)),(62):Inline(Progress(1)),(63):Named(Bool(false),"enable_cylinder_object"),(64):Named(Bool(false),"two_sided")},storage_order:[(0),(1),(2),(6),(7),(8),(9),(14),(11),(15),(16),(17),(19),(20),(30),(33),(10),(45),(46),(44),(48),(63),(64)]),matrices:(ids:(available:[],max:81),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Simple(offset:(-1.2,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),"p1"),(14):Named(Simple(offset:(1.2,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),"p2"),(15):Inline(Simple(offset:(0.73,-0.5,0),scale:1.26,rotate:(0,0,0),mirror:(false,false,false))),(16):Inline(Simple(offset:(0.3,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(17):Inline(Simple(offset:(1.01,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(18):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(19):Named(Mul(to:Some(((15))),what:Some(((13)))),"triangle"),(20):Named(Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((19)))),"triangle_teleported"),(21):Inline(Mul(to:Some(((35))),what:Some(((28))))),(22):Inline(Mul(to:Some(((35))),what:Some(((30))))),(23):Named(Mul(to:Some(((27))),what:Some(((25)))),"leg1"),(24):Named(Mul(to:Some(((26))),what:Some(((25)))),"box"),(25):Named(Parametrized(offset:(x:No(0),y:Yes(Some(((57)))),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"table"),(26):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((18)))),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(27):Inline(Parametrized(offset:(x:Yes(Some(((21)))),y:No(0),z:Yes(Some(((22))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(28):Named(Mul(to:Some(((29))),what:Some(((25)))),"leg2"),(29):Inline(Parametrized(offset:(x:Yes(Some(((23)))),y:No(0),z:Yes(Some(((24))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(30):Named(Mul(to:Some(((31))),what:Some(((25)))),"leg3"),(31):Inline(Parametrized(offset:(x:Yes(Some(((25)))),y:No(0),z:Yes(Some(((26))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(32):Named(Mul(to:Some(((33))),what:Some(((25)))),"leg4"),(33):Inline(Parametrized(offset:(x:Yes(Some(((27)))),y:No(0),z:Yes(Some(((28))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(34):Inline(Mul(to:Some(((35))),what:Some(((23))))),(35):Named(Parametrized(offset:(x:No(0),y:Yes(Some(((31)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),"portal_leg_common"),(36):Named(Teleport(first_portal:Some(((25))),second_portal:Some(((78))),what:Some(((79)))),"portal_leg_orange"),(37):Inline(Mul(to:Some(((36))),what:Some(((28))))),(38):Inline(Mul(to:Some(((36))),what:Some(((23))))),(39):Inline(Mul(to:Some(((36))),what:Some(((30))))),(40):Inline(Mul(to:Some(((35))),what:Some(((32))))),(41):Inline(Mul(to:Some(((36))),what:Some(((32))))),(42):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"human"),(43):Inline(Mul(to:Some(((57))),what:Some(((42))))),(44):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(45):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(46):Inline(Mul(to:Some(((49))),what:Some(((42))))),(47):Inline(Simple(offset:(-0.61,0,-1),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(48):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(1.5707963267948966),y:Yes(Some(((32)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(49):Inline(Mul(to:Some(((59))),what:Some(((48))))),(50):Inline(Mul(to:Some(((53))),what:Some(((42))))),(51):Inline(Simple(offset:(-0.38,0,-1),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(52):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(1.5707963267948966),y:Yes(Some(((41)))),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(53):Inline(Mul(to:Some(((60))),what:Some(((52))))),(54):Inline(Mul(to:Some(((58))),what:Some(((42))))),(55):Inline(Simple(offset:(-0.16,0,-1),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(56):Inline(Simple(offset:(0.06,0,-1),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(57):Inline(Parametrized(offset:(x:Yes(Some(((38)))),y:No(1),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(58):Inline(Parametrized(offset:(x:Yes(Some(((39)))),y:No(1),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(59):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((40))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(60):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((35))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(61):Inline(Mul(to:Some(((62))),what:Some(((42))))),(62):Inline(Mul(to:Some(((65))),what:Some(((64))))),(63):Inline(Simple(offset:(0.56,0,-1),scale:1,rotate:(0,0,4.71238898038469),mirror:(false,false,false))),(64):Inline(Simple(offset:(0,0.47,0),scale:1,rotate:(1.5707963267948966,0,4.71238898038469),mirror:(false,false,false))),(65):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(66):Inline(Mul(to:Some(((67))),what:Some(((13))))),(67):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((50)))),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1.25))),(68):Named(Simple(offset:(-9,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room1"),(69):Named(Simple(offset:(9,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room2"),(70):Inline(Mul(to:Some(((71))),what:Some(((68))))),(71):Inline(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(72):Inline(Mul(to:Some(((73))),what:Some(((69))))),(73):Inline(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(74):Inline(Teleport(first_portal:Some(((25))),second_portal:Some(((76))),what:Some(((75))))),(75):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(76):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(77):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(78):Inline(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))),(79):Inline(Simple(offset:(2.82,-3.35,2.83),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false))),(80):Inline(Simple(offset:(-1.2,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)))},storage_order:[(0),(13),(14),(19),(20),(24),(25),(23),(28),(30),(32),(35),(36),(42),(68),(69)]),objects:(ids:(available:[],max:28),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);"))),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);"))),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);"))),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);"))),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);"))),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);"))),"room_z-"),(6):Named(Complex(kind:Portal(Some(((13))),Some(((14)))),intersect:(("if (enable_cylinder_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_v2(\n  orig_cylinder_radius_u,\n  pow(cylinder_progress_u, 2.0),\n  0.07,\n  0.02,\n  cylinder_size_u,\n  r,\n  first\n);"))),"main cylinder"),(7):Named(Flat(kind:Simple(Some(((19)))),is_inside:(("if (enable_cylinder_u == 0) { return NOT_INSIDE; }\nif (enable_triangle_u == 0) { return NOT_INSIDE; }\n\nvec4 portal_pos = p1_mat_inv * pos;\nfloat cylinder_radius = get_orig_cylinder_radius(orig_cylinder_radius_u, pow(cylinder_progress_u, 2.0));\nif (sqr(portal_pos.x + cylinder_radius - orig_cylinder_radius_u) + sqr(portal_pos.y) < sqr(cylinder_radius)) return NOT_INSIDE;\n\nreturn is_inside_object(\n  0.3,\n  triangle_distance(x, y, 1.61, -1.61, 1.0),\n  0.03,\n  triangle_white_M,\n  triangle_black_M\n);"))),"main cylinder triangle"),(8):Named(Flat(kind:Simple(Some(((20)))),is_inside:(("if (enable_cylinder_u == 0) { return NOT_INSIDE; }\nif (enable_triangle_u == 0) { return NOT_INSIDE; }\n\nvec4 portal_pos = p2_mat_inv * pos;\nfloat cylinder_radius = get_orig_cylinder_radius(orig_cylinder_radius_u, pow(cylinder_progress_u, 2.0));\nif (sqr(portal_pos.x + cylinder_radius - orig_cylinder_radius_u) + sqr(portal_pos.y) > sqr(cylinder_radius)) return NOT_INSIDE;\n\nreturn is_inside_object(\n  0.3,\n  triangle_distance(x, y, 1.61, -1.61, 1.0),\n  0.03,\n  triangle_white_M,\n  triangle_black_M\n);"))),"main cylinder triangle teleported"),(9):Named(Complex(kind:Portal(Some(((34))),Some(((38)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_leg(r, first);"))),"table leg1 portal"),(10):Named(Complex(kind:Simple(Some(((23)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn SceneIntersection(triangle_white_M, cap(r, vec3(0.), vec3(0., table_height_u, 0.), table_leg_width_u), false);"))),"table leg1"),(11):Named(Complex(kind:Simple(Some(((24)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\n// thanks to @iq for https://www.shadertoy.com/view/ld23DV\n\nvec3 rad = vec3(table_h_u, table_width_u, table_w_u);\n\nvec3 rdd = r.d.xyz;\nvec3 roo = r.o.xyz;\n\n// ray-box intersection in box space\nvec3 m = 1.0/rdd;\nvec3 n = m*roo;\nvec3 k = abs(m)*rad;\n\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nif(tN > tF || tF < 0.0) return scene_intersection_none;\n\nvec3 nor = -sign(rdd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nreturn SceneIntersection(triangle_white_M, SurfaceIntersection(true, tN, 0., 0., nor), false);"))),"table box"),(12):Named(Complex(kind:Simple(Some(((28)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn SceneIntersection(triangle_white_M, cap(r, vec3(0.), vec3(0., table_height_u, 0.), table_leg_width_u), false);"))),"table leg2"),(13):Named(Complex(kind:Simple(Some(((30)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn SceneIntersection(triangle_white_M, cap(r, vec3(0.), vec3(0., table_height_u, 0.), table_leg_width_u), false);"))),"table leg3"),(14):Named(Complex(kind:Simple(Some(((32)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn SceneIntersection(triangle_white_M, cap(r, vec3(0.), vec3(0., table_height_u, 0.), table_leg_width_u), false);"))),"table leg4"),(15):Named(Complex(kind:Portal(Some(((21))),Some(((37)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_leg(r, first);"))),"table leg2 portal"),(16):Named(Complex(kind:Portal(Some(((22))),Some(((39)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_leg(r, first);"))),"table leg3 portal"),(17):Named(Complex(kind:Portal(Some(((40))),Some(((41)))),intersect:(("if (enable_table_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_leg(r, first);"))),"table leg4 portal"),(18):Named(Complex(kind:Simple(Some(((42)))),intersect:(("vec3 pa = vec3(0.);\nfloat radius = 0.06;\n\nSurfaceIntersection hit = intersection_none;\nSceneIntersection i = SceneIntersection(0, hit, false);\n\nif (enable_human_u == 0) { return i; }\n\nvec2 a1 = vec2(0., 0.); vec2 b1 = vec2(-0.4, -1.3);\nvec2 a2 = vec2(0., 0.); vec2 b2 = vec2(0.4, -1.3);\nvec2 a3 = vec2(0., 0.); vec2 b3 = vec2(0., 1.4);\nvec2 a4 = vec2(0., 1.); vec2 b4 = vec2(-1., 1.);\nvec2 a5 = vec2(0., 1.); vec2 b5 = vec2(1., 1.);\n\nhit = cap(r, vec3(a1, 0.), vec3(b1, 0.), radius);\nif (nearer(i, hit)) { i.hit = hit; }\nhit = cap(r, vec3(a2, 0.), vec3(b2, 0.), radius);\nif (nearer(i, hit)) { i.hit = hit; }\nhit = cap(r, vec3(a3, 0.), vec3(b3, 0.), radius);\nif (nearer(i, hit)) { i.hit = hit; }\nhit = cap(r, vec3(a4, 0.), vec3(b4, 0.), radius);\nif (nearer(i, hit)) { i.hit = hit; }\nhit = cap(r, vec3(a5, 0.), vec3(b5, 0.), radius);\nif (nearer(i, hit)) { i.hit = hit; }\n\nhit = intersect_sphere(r, vec4(b3, 0., 0.), 0.25);\nif (nearer(i, hit)) { i.hit = hit; }\n\nif (i.hit.hit) { i.material = triangle_black_M; }\nreturn i;"))),"human"),(19):Named(Complex(kind:Portal(Some(((46))),Some(((47)))),intersect:(("if (enable_human_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_v2(\n  0.09,\n  1.0,\n  0.07,\n  0.02,\n  0.4,\n  r,\n  first\n);"))),"human_leg_portal1"),(20):Named(Complex(kind:Portal(Some(((50))),Some(((51)))),intersect:(("if (enable_human_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_v2(\n  0.09,\n  1.0,\n  0.07,\n  0.02,\n  0.4,\n  r,\n  first\n);"))),"human_leg_portal2"),(21):Named(Complex(kind:Portal(Some(((54))),Some(((55)))),intersect:(("if (enable_human_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_v2(\n  0.09,\n  1.0,\n  0.07,\n  0.02,\n  0.3,\n  r,\n  first\n);"))),"human_arm_portal1"),(22):Named(Complex(kind:Portal(Some(((43))),Some(((56)))),intersect:(("if (enable_human_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_v2(\n  0.09,\n  1.0,\n  0.07,\n  0.02,\n  0.3,\n  r,\n  first\n);"))),"human_arm_portal2"),(23):Named(Complex(kind:Portal(Some(((61))),Some(((63)))),intersect:(("if (enable_human_u == 0) { return scene_intersection_none; }\n\nreturn intersect_cylinder_portal_v2(\n  0.09,\n  human_progress_u,\n  0.07,\n  0.02,\n  0.3,\n  r,\n  first\n);"))),"human_body_portal"),(24):Named(Complex(kind:Simple(Some(((68)))),intersect:(("if (enable_cylinder_u == 0) { return scene_intersection_none; }\n\nreturn intersect_box(r, room_red_M);"))),"main cylinder room1"),(25):Named(Complex(kind:Simple(Some(((69)))),intersect:(("if (enable_cylinder_u == 0) { return scene_intersection_none; }\n\nreturn intersect_box(r, room_blue_M);"))),"main cylinder room2"),(26):Named(Complex(kind:Simple(Some(((68)))),intersect:(("if (enable_cylinder_object_u == 0) { return scene_intersection_none; }\n\nreturn SceneIntersection(triangle_white_M, cap(r, vec3(0., -1.0, 0.), vec3(0., 1.0, 0.), 0.2), false);"))),"object_room1"),(27):Named(Complex(kind:Simple(Some(((80)))),intersect:(("if (enable_cylinder_object_u == 0) { return scene_intersection_none; }\n\nreturn SceneIntersection(triangle_white_M, cap(r, vec3(0., -1.0, 0.), vec3(0., 1.0, 0.), 0.2), false);"))),"object_main")},storage_order:[(0),(1),(2),(3),(4),(5),(6),(7),(8),(24),(25),(11),(10),(12),(13),(14),(9),(15),(16),(17),(18),(19),(20),(21),(22),(23),(26),(27)]),cameras:(ids:(available:[],max:5),storage:{(0):Named((look_at:MatrixCenter(Some(((68)))),alpha:-0.5088996148109435,beta:1.1211397421360016,r:3.5),"room1"),(1):Named((look_at:MatrixCenter(Some(((69)))),alpha:-0.5088996148109435,beta:1.1211397421360016,r:3.5),"room2"),(2):Inline((look_at:Coordinate((0,-3.25,0)),alpha:-115.16392292526365,beta:1.060183674097059,r:3.9142513012204345)),(3):Inline((look_at:Coordinate((0,-3.25,0)),alpha:-115.07796780374677,beta:1.2489379358291626,r:2.6734863064138006)),(4):Inline((look_at:Coordinate((0,0,0)),alpha:1.429605930271512,beta:1.1318605816364282,r:3.2349184307606698))},storage_order:[(0),(1)]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:21),storage:{(0):Named(Simple(color:(0.8980392156862745,0.8313725490196079,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_yellow"),(1):Named(Simple(color:(0.050980392156862744,0.050980392156862744,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_black"),(2):Named(Simple(color:(0.9058823529411765,0.29411764705882354,0.29411764705882354),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_red"),(3):Named(Simple(color:(0.2235294117647059,0.2235294117647059,0.2235294117647059),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_gray"),(4):Named(Simple(color:(0.3137254901960784,0.38823529411764707,0.9254901960784314),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_blue"),(5):Named(Simple(color:(0.2627450980392157,0.8470588235294118,0.30196078431372547),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"portal_orange"),(8):Named(Simple(color:(0.6666666666666666,0.6666666666666666,0.6666666666666666),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(2.627450980392157e-1, 8.470588235294118e-1, 3.0196078431372547e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(3.137254901960784e-1, 3.8823529411764707e-1, 9.254901960784314e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14)]),intersection_materials:(ids:(available:[],max:0),storage:{},storage_order:[]),library:(ids:(available:[],max:5),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y, float a, float b) {\n  return max(abs(x)-a+1., abs(y)-b+1.);\n}\n\nfloat triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance > size) return material_inner;\r\n  if (distance > size -border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}\n\nfloat get_orig_cylinder_radius(\n  float cylinder_radius,\n  float progress\n) {\n  float progress2 = pow(progress, (1.-progress)*0.3 + 0.15);\n  return cylinder_radius + (1. - progress2)/(progress2 + 0.01);\n}\n\nSceneIntersection intersect_cylinder_portal_v2(\n  float cylinder_radius,\n  float progress,\n  float border_size,\n  float black_border_size,\n  float cylinder_height,\n  Ray r,\n  bool first\n) {\n  float orig_cylinder_radius = get_orig_cylinder_radius(cylinder_radius, progress);\n  r.o.x += orig_cylinder_radius - cylinder_radius;\n\n  float a = dot(r.d.xy, r.d.xy);\n  float b = 2.0 * dot(r.o.xy, r.d.xy);\n  float c = dot(r.o.xy, r.o.xy) - sqr(orig_cylinder_radius);\n  float det = b*b - 4.0 * a * c;\n  if (det < 0.) return scene_intersection_none;\n\n  det = sqrt(det);\n\n  float t = (-b - det)/(2.*a);\n  vec4 pos = r.o + r.d * t;\n  float u = atan(pos.y, pos.x) * orig_cylinder_radius;\n  float v = pos.z;\n  float distance = rect_distance(u, v, PI*cylinder_radius, cylinder_height);\n  int result_material = is_inside_portal(\n    distance,\n    1.0,\n    border_size,\n    black_border_size,\n    portal_blue_M,\n    portal_orange_M,\n    grid_gray_M,\n    grid_gray_M,\n    two_sided_u == 0 && invert_if(true, first),\n    first\n  );\n\n  if (t < 0. || result_material == NOT_INSIDE) {\n    t = (-b + det)/(2.*a);\n    pos = r.o + r.d * t;\n    u = atan(pos.y, pos.x) * orig_cylinder_radius;\n    v = pos.z;\n    distance = rect_distance(u, v, PI*cylinder_radius, cylinder_height);\n    result_material = is_inside_portal(\n      distance,\n      1.0,\n      border_size,\n      black_border_size,\n      portal_blue_M,\n      portal_orange_M,\n      grid_gray_M,\n      grid_gray_M,\n      two_sided_u == 0 && invert_if(false, first),\n      first\n    );\n    if (t< 0. || result_material == NOT_INSIDE) {\n      return scene_intersection_none;\n    }\n  }\n\n  vec3 n = normalize(vec3(pos.xy, 0.));\n\n  return SceneIntersection(result_material, SurfaceIntersection(true, t, u, v, n), false);\n}\n\nSceneIntersection intersect_cylinder_portal_leg(\n  Ray r,\n  bool first\n) {\n  return intersect_cylinder_portal_v2(\n    table_leg_width_u+0.02,\n    1.0,\n    0.05,\n    0.01,\n    (table_height_u)/2.-0.05,\n    r,\n    first\n  );\n}\n")),"portal"),(4):Named((("SurfaceIntersection intersect_sphere(Ray r, vec4 center, float radius) {\n  r.o -= center;\n  vec3 op = -r.o.xyz;\n  float b = dot(op, r.d.xyz);\n  float det = b*b - dot(op, op) + sqr(radius);\n  if (det < 0.) return intersection_none;\n\n  det = sqrt(det);\n  float t = b - det;\n  if (t < 0.) t = b + det;\n  if (t < 0.) return intersection_none;\n\n  vec4 pos = r.o + r.d * t;\n  vec3 n = normalize(pos.xyz);\n\n  float u = atan(pos.z, pos.x);\n  float v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\n\n  return SurfaceIntersection(true, t, u, v, n);\n}")),"sphere")},storage_order:[(2),(0),(1),(4),(3)]),animations_filters:(uniforms:({((6)):false,((30)):true,((63)):true,((16)):false,((46)):true,((33)):true,((64)):true,((19)):false,((2)):false,((8)):false,((0)):false,((48)):true,((45)):true,((44)):true,((20)):false,((10)):true,((1)):false,((9)):false,((11)):false,((14)):true,((15)):false,((17)):false,((7)):true}),matrices:({((69)):false,((68)):false,((28)):false,((17)):false,((35)):false,((0)):false,((20)):false,((42)):true,((14)):true,((30)):false,((25)):true,((36)):false,((23)):false,((15)):false,((24)):false,((32)):false,((13)):true,((19)):true}),cameras:({((0)):true,((1)):true})),elements_descriptions:(uniforms:({((48)):(help_description:None,overrided_name:"Triangle position"),((10)):(help_description:None,overrided_name:""),((7)):(help_description:None,overrided_name:"Teleport light"),((64)):(help_description:None,overrided_name:"Second side"),((44)):(help_description:None,overrided_name:"Enable triangle"),((46)):(help_description:None,overrided_name:""),((30)):(help_description:None,overrided_name:"Wear portal legs"),((14)):(help_description:None,overrided_name:"Transform to cylinder progress"),((45)):(help_description:None,overrided_name:""),((63)):(help_description:None,overrided_name:"Enable cylinder object"),((33)):(help_description:None,overrided_name:"Wear armor")}),matrices:({((19)):(help_description:None,overrided_name:""),((13)):(help_description:None,overrided_name:"Blue portal"),((42)):(help_description:None,overrided_name:""),((14)):(help_description:None,overrided_name:"Orange portal"),((25)):(help_description:None,overrided_name:"")}),cameras:({((1)):(help_description:None,overrided_name:"Blue room"),((0)):(help_description:None,overrided_name:"Red room")})),user_uniforms:(uniforms:({((19)):false,((6)):false,((9)):false,((17)):false,((14)):false,((48)):false,((8)):false,((2)):false,((20)):false,((0)):false,((64)):true,((46)):false,((7)):true,((30)):false,((16)):false,((44)):false,((10)):false,((15)):false,((45)):false,((11)):false,((63)):false,((33)):false,((1)):false}),matrices:({((24)):false,((19)):false,((28)):false,((68)):false,((25)):false,((23)):false,((32)):false,((30)):false,((14)):false,((69)):false,((13)):false,((20)):false,((35)):false,((42)):false,((36)):false,((0)):false})),animation_stages:(ids:(available:[],max:6),storage:{(0):Named((name:(eng:"How to build",rus:"Как сделать"),description:Some((eng:"Can be built using flat portals.",rus:"Может быть собран из плоских порталов.")),uniforms:({((9)):FromDev,((17)):FromDev,((0)):FromDev,((48)):FromDev,((11)):FromDev,((33)):FromDev,((44)):ProvidedToUser,((19)):FromDev,((45)):FromDev,((7)):FromDev,((15)):FromDev,((8)):FromDev,((2)):FromDev,((46)):Changed(Some(((47)))),((14)):ChangedAndToUser(Some(((59)))),((1)):FromDev,((6)):FromDev,((30)):FromDev,((16)):FromDev,((20)):FromDev,((63)):ProvidedToUser,((10)):FromDev}),matrices:({((19)):FromDev,((28)):FromDev,((30)):FromDev,((24)):FromDev,((42)):FromDev,((32)):FromDev,((36)):FromDev,((35)):FromDev,((14)):FromDev,((13)):FromDev,((69)):FromDev,((23)):FromDev,((25)):FromDev,((0)):FromDev,((68)):FromDev,((20)):FromDev}),original_cam_button:false,set_cam:None,cams:{((1)):false,((0)):false}),"how to build"),(1):Named((name:(eng:"Move triangle",rus:"Подвигать треугольник"),description:Some((eng:"Thing can get right through it.",rus:"Сквозь него вещи могут проходить насквозь.")),uniforms:({((48)):ProvidedToUser,((11)):FromDev,((46)):Changed(Some(((49)))),((45)):FromDev,((15)):FromDev,((0)):FromDev,((30)):FromDev,((7)):FromDev,((16)):FromDev,((14)):Changed(Some(((51)))),((8)):FromDev,((19)):FromDev,((6)):FromDev,((1)):FromDev,((9)):FromDev,((10)):FromDev,((17)):FromDev,((63)):ProvidedToUser,((2)):FromDev,((44)):Changed(Some(((52)))),((20)):FromDev,((33)):FromDev}),matrices:({((68)):FromDev,((35)):FromDev,((25)):FromDev,((14)):FromDev,((30)):FromDev,((32)):FromDev,((36)):FromDev,((69)):FromDev,((0)):FromDev,((23)):FromDev,((28)):FromDev,((13)):FromDev,((24)):FromDev,((20)):FromDev,((19)):Changed(Some(((66)))),((42)):FromDev}),original_cam_button:false,set_cam:None,cams:{((0)):false,((1)):false}),"move triangle"),(2):Named((name:(eng:"Different rooms",rus:"Разные комнаты"),description:Some((eng:"This scene shows different part of the cylindric portal in a different rooms, if you didn\'t understand how this works.",rus:"Если вы не поняли как это работает, то в данной сцене части одного портала находятся в разных комнатах.")),uniforms:({((7)):FromDev,((8)):FromDev,((45)):FromDev,((15)):FromDev,((0)):FromDev,((33)):FromDev,((14)):ChangedAndToUser(Some(((55)))),((48)):FromDev,((2)):FromDev,((17)):FromDev,((30)):FromDev,((44)):FromDev,((20)):FromDev,((16)):FromDev,((63)):ProvidedToUser,((6)):FromDev,((19)):FromDev,((11)):FromDev,((46)):Changed(Some(((54)))),((10)):FromDev,((1)):FromDev,((9)):FromDev}),matrices:({((19)):FromDev,((25)):FromDev,((28)):FromDev,((13)):Changed(Some(((70)))),((68)):FromDev,((42)):FromDev,((14)):Changed(Some(((72)))),((69)):FromDev,((32)):FromDev,((30)):FromDev,((35)):FromDev,((23)):FromDev,((24)):FromDev,((0)):FromDev,((20)):FromDev,((36)):FromDev}),original_cam_button:false,set_cam:Some(Some(((0)))),cams:{((1)):true,((0)):true}),"different rooms"),(3):Named((name:(eng:"Table without legs",rus:"Стол без ножек"),description:Some((eng:"You can create table without legs using 4 cylindric portals.",rus:"Можно создать стол без ножек, взяв 4 цилиндрических портала.")),uniforms:({((9)):FromDev,((7)):FromDev,((2)):FromDev,((45)):Changed(Some(((56)))),((19)):FromDev,((11)):FromDev,((6)):FromDev,((8)):FromDev,((17)):FromDev,((16)):FromDev,((33)):FromDev,((20)):FromDev,((10)):FromDev,((1)):FromDev,((14)):FromDev,((30)):ProvidedToUser,((0)):FromDev,((46)):FromDev,((15)):FromDev,((44)):FromDev,((48)):FromDev}),matrices:({((19)):FromDev,((32)):FromDev,((69)):FromDev,((14)):FromDev,((42)):FromDev,((68)):FromDev,((36)):FromDev,((30)):FromDev,((13)):FromDev,((25)):FromDev,((0)):FromDev,((35)):FromDev,((24)):FromDev,((23)):FromDev,((28)):FromDev,((20)):FromDev}),original_cam_button:false,set_cam:Some(Some(((2)))),cams:{((0)):false,((1)):false}),"table without legs"),(4):Named((name:(eng:"Portal armor",rus:"Портальная броня"),description:Some((eng:"You can create perfect armor that can ignore all the bullets.",rus:"Можно создать идеальную броню, сквозь которую будут пролетать все пули.")),uniforms:({((8)):FromDev,((2)):FromDev,((44)):FromDev,((46)):FromDev,((11)):FromDev,((10)):Changed(Some(((58)))),((48)):FromDev,((15)):FromDev,((17)):FromDev,((1)):FromDev,((6)):FromDev,((19)):FromDev,((45)):FromDev,((16)):FromDev,((0)):FromDev,((9)):FromDev,((7)):FromDev,((30)):FromDev,((33)):ProvidedToUser,((14)):FromDev,((20)):FromDev}),matrices:({((68)):FromDev,((69)):FromDev,((14)):FromDev,((13)):FromDev,((30)):FromDev,((42)):FromDev,((19)):FromDev,((0)):FromDev,((23)):FromDev,((25)):FromDev,((24)):FromDev,((28)):FromDev,((20)):FromDev,((32)):FromDev,((35)):FromDev,((36)):FromDev}),original_cam_button:false,set_cam:None,cams:{((1)):false,((0)):false}),"portal armor"),(5):Named((name:(eng:"Explore",rus:"Исследование"),description:None,uniforms:({((10)):FromDev,((11)):FromDev,((46)):Changed(Some(((60)))),((14)):ChangedAndToUser(Some(((62)))),((33)):FromDev,((19)):FromDev,((9)):FromDev,((45)):FromDev,((20)):FromDev,((44)):Changed(Some(((61)))),((2)):FromDev,((8)):FromDev,((7)):FromDev,((16)):FromDev,((48)):FromDev,((63)):ProvidedToUser,((15)):FromDev,((17)):FromDev,((30)):FromDev,((6)):FromDev,((1)):FromDev,((0)):FromDev}),matrices:({((14)):ProvidedToUser,((24)):FromDev,((23)):FromDev,((42)):FromDev,((0)):FromDev,((13)):ProvidedToUser,((28)):FromDev,((35)):FromDev,((19)):FromDev,((36)):FromDev,((32)):FromDev,((68)):FromDev,((30)):FromDev,((25)):FromDev,((20)):FromDev,((69)):FromDev}),original_cam_button:false,set_cam:Some(Some(((4)))),cams:{((0)):false,((1)):false}),"explore")},storage_order:[(0),(1),(2),(3),(4),(5)]),current_stage:Some(((0))),dev_stage:(uniforms:({((19)):Float((min:Some(0),max:None,value:0.05)),((16)):Float((min:Some(0),max:None,value:1)),((48)):Progress(0),((6)):Progress(0),((14)):Progress(0),((11)):Float((min:Some(0),max:None,value:0.66)),((10)):Bool(false),((2)):Float((min:Some(0),max:None,value:4)),((64)):Bool(false),((46)):Bool(false),((44)):Bool(false),((33)):Progress(0),((63)):Bool(false),((8)):Bool(false),((9)):Float((min:Some(0),max:Some(5),value:0.5)),((20)):Float((min:Some(0),max:None,value:0.03)),((7)):Bool(true),((1)):Float((min:Some(0),max:None,value:4)),((17)):Float((min:Some(0),max:None,value:1.16)),((15)):Float((min:Some(0),max:None,value:0.66)),((30)):Progress(0),((45)):Bool(false),((0)):Float((min:Some(0),max:None,value:4))}),matrices:({((13)):Simple(offset:(-1.2,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),((20)):Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((19)))),((28)):Mul(to:Some(((29))),what:Some(((25)))),((14)):Simple(offset:(1.2,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),((32)):Mul(to:Some(((33))),what:Some(((25)))),((68)):Simple(offset:(-9,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((35)):Parametrized(offset:(x:No(0),y:Yes(Some(((31)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),((25)):Parametrized(offset:(x:No(0),y:Yes(Some(((57)))),z:No(0)),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1)),((24)):Mul(to:Some(((26))),what:Some(((25)))),((23)):Mul(to:Some(((27))),what:Some(((25)))),((42)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((30)):Mul(to:Some(((31))),what:Some(((25)))),((36)):Teleport(first_portal:Some(((25))),second_portal:Some(((78))),what:Some(((79)))),((19)):Mul(to:Some(((15))),what:Some(((13)))),((69)):Simple(offset:(9,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false))})),use_time:false)