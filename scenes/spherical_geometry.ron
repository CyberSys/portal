(desc:(eng:"",rus:""),cam:(look_at:(0,0,0),alpha:1.527390315528731,beta:1.5249701778080802,r:1.9090909090909092,offset_after_material:0.000025),uniforms:(ids:(available:[],max:30),storage:{(0):Named(Float((min:Some(0),max:None,value:4)),"room_size_x"),(1):Named(Float((min:Some(0),max:None,value:4)),"room_size_y"),(2):Named(Float((min:Some(0),max:None,value:4)),"room_size_z"),(3):Inline(Formula(("-room_size_x"))),(4):Inline(Formula(("-room_size_y"))),(5):Inline(Formula(("-room_size_z"))),(6):Named(Progress(0),"portal_black_color_progress"),(7):Named(Bool(true),"teleport_light"),(8):Named(Bool(false),"mirror"),(9):Named(Float((min:Some(0),max:Some(0.3),value:0.15000000000000002)),"height"),(10):Named(Float((min:Some(0),max:Some(0.02),value:0.0035)),"width"),(11):Named(Float((min:Some(0),max:Some(0.02),value:0.0103)),"side"),(12):Named(Int((min:Some(1),max:None,value:1)),"plus_degree"),(13):Named(Int((min:Some(1),max:None,value:1)),"minus_degree"),(14):Named(Angle(0.29670597283903605),"blue_x"),(15):Named(Angle(1.5707963267948966),"blue_y"),(16):Named(Angle(1.5707963267948966),"blue_rot"),(17):Inline(Formula(("deg2rad(lerp(90, 0, easing_in_out(min(time*2, 1))))"))),(18):Inline(Formula(("deg2rad(lerp(17, 4, easing_in_out(max(time*2-1, 0))))"))),(19):Inline(Formula(("0"))),(20):Inline(Formula(("deg2rad(lerp(17, 4, easing_in_out(time*2)))"))),(21):Inline(Int((min:None,max:None,value:20))),(22):Inline(Formula(("0"))),(23):Inline(Formula(("deg2rad(lerp(4, -11, easing_in_out(time)))"))),(24):Inline(FormulaInt(("lerp(1, 26, time)"))),(25):Inline(FormulaInt(("lerp(1, 26, time)"))),(26):Inline(Formula(("0"))),(27):Inline(Formula(("deg2rad(-11)"))),(28):Inline(FormulaInt(("lerp(25, 250, time)"))),(29):Inline(FormulaInt(("lerp(25, 250, time)")))},storage_order:[(0),(1),(2),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)]),matrices:(ids:(available:[],max:21),storage:{(0):Named(Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),"room_origin"),(1):Inline(Mul(to:Some(((2))),what:Some(((0))))),(2):Inline(Parametrized(offset:(x:Yes(Some(((0)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(3):Inline(Mul(to:Some(((4))),what:Some(((0))))),(4):Inline(Parametrized(offset:(x:Yes(Some(((3)))),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(5):Inline(Mul(to:Some(((6))),what:Some(((0))))),(6):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((1)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(7):Inline(Mul(to:Some(((8))),what:Some(((0))))),(8):Inline(Parametrized(offset:(x:No(0),y:Yes(Some(((4)))),z:No(0)),rotate:(x:No(1.5707963267948966),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(9):Inline(Mul(to:Some(((10))),what:Some(((0))))),(10):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((2))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(11):Inline(Mul(to:Some(((12))),what:Some(((0))))),(12):Inline(Parametrized(offset:(x:No(0),y:No(0),z:Yes(Some(((5))))),rotate:(x:No(0),y:No(0),z:No(0)),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(13):Named(Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),"a"),(14):Named(Mul(to:Some(((18))),what:Some(((17)))),"b"),(15):Inline(Simple(offset:(0,0,0),scale:0.99,rotate:(0,0,0),mirror:(false,false,false))),(16):Named(Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((14)))),"b1"),(17):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:No(0),y:No(1.5707963267948966),z:Yes(Some(((15))))),mirror:(x:No(0),y:No(0),z:No(0)),scale:No(1))),(18):Inline(Parametrized(offset:(x:No(0),y:No(0),z:No(0)),rotate:(x:Yes(Some(((14)))),y:Yes(Some(((16)))),z:No(0)),mirror:(x:No(1),y:No(0),z:No(0)),scale:No(1))),(19):Named(Teleport(first_portal:Some(((14))),second_portal:Some(((13))),what:Some(((14)))),"a1"),(20):Named(Teleport(first_portal:Some(((14))),second_portal:Some(((13))),what:Some(((19)))),"a2")},storage_order:[(0),(13),(14),(16),(19),(20)]),objects:(ids:(available:[],max:7),storage:{(0):Named(Flat(kind:Simple(Some(((1)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_yellow_M);")),in_subspace:Normal),"room_x+"),(1):Named(Flat(kind:Simple(Some(((3)))),is_inside:(("return is_inside_square(x, y, room_size_z_u, room_size_y_u, room_red_M);")),in_subspace:Normal),"room_x-"),(2):Named(Flat(kind:Simple(Some(((5)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_black_M);")),in_subspace:Normal),"room_y+"),(3):Named(Flat(kind:Simple(Some(((7)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_z_u, room_gray_M);")),in_subspace:Normal),"room_y-"),(4):Named(Flat(kind:Simple(Some(((9)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_blue_M);")),in_subspace:Normal),"room_z+"),(5):Named(Flat(kind:Simple(Some(((11)))),is_inside:(("return is_inside_square(x, y, room_size_x_u, room_size_y_u, room_green_M);")),in_subspace:Normal),"room_z-"),(6):Named(Complex(kind:Simple(Some(((15)))),intersect:(("vec3 op = -r.o.xyz;\nfloat b = dot(op, r.d.xyz);\nfloat det = b*b - dot(op, op) + 1.0;\nif (det < 0.) return scene_intersection_none;\n\ndet = sqrt(det);\nfloat t = b - det;\nif (t < 0.) t = b + det;\nif (t < 0.) return scene_intersection_none;\n\nvec4 pos = r.o + r.d * t;\nvec3 n = normalize(pos.xyz);\n\nfloat u = atan(pos.z, pos.x);\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\n\nreturn SceneIntersection(grid_gray_M, SurfaceIntersection(true, t, u, v, n), false);")),in_subspace:Normal),"sphere")},storage_order:[(0),(1),(2),(3),(4),(5),(6)]),cameras:(ids:(available:[],max:3),storage:{(0):Inline((look_at:Coordinate((0,0,0)),alpha:1.035573187963731,beta:1.4425900443368709,r:2.9977460555973003,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(1):Inline((look_at:Coordinate((0,0,0)),alpha:1.5707963267948966,beta:1.5707963267948966,r:1.5383177248238338,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))),(2):Inline((look_at:Coordinate((0,0,0)),alpha:4.71238898038469,beta:1.5707963267948966,r:2.1,in_subspace:false,free_movement:false,matrix:(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)))},storage_order:[]),textures:(ids:(available:[],max:1),storage:{(0):Named(("scenes/monoportal.png"),"texture")},storage_order:[(0)]),materials:(ids:(available:[],max:21),storage:{(0):Named(Simple(color:(0.8980392156862745,0.8313725490196079,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_yellow"),(1):Named(Simple(color:(0.050980392156862744,0.050980392156862744,0.050980392156862744),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_black"),(2):Named(Simple(color:(0.9058823529411765,0.29411764705882354,0.29411764705882354),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_red"),(3):Named(Simple(color:(0.2235294117647059,0.2235294117647059,0.2235294117647059),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_gray"),(4):Named(Simple(color:(0.3137254901960784,0.38823529411764707,0.9254901960784314),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_blue"),(5):Named(Simple(color:(0.2627450980392157,0.8470588235294118,0.30196078431372547),normal_coef:0.5,grid:true,grid_scale:1,grid_coef:0.3,grid2:false,grid3:true),"room_green"),(6):Named(Simple(color:(0.03529411764705882,0.6431372549019608,0.788235294117647),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_blue"),(7):Named(Simple(color:(0.9294117647058824,0.4235294117647059,0.050980392156862744),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"portal_orange"),(8):Named(Simple(color:(1,1,1),normal_coef:0.5,grid:true,grid_scale:50,grid_coef:0.1,grid2:false,grid3:false),"grid_gray"),(9):Named(Simple(color:(0.043137254901960784,0.043137254901960784,0.043137254901960784),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"triangle_black"),(10):Named(Simple(color:(0.7686274509803922,0.7686274509803922,0.7686274509803922),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"triangle_white"),(11):Named(Simple(color:(1,0.24313725490196078,0.24313725490196078),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:false,grid3:false),"solid_0"),(12):Named(Simple(color:(0.24313725490196078,1,0.25098039215686274),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:false,grid3:false),"solid_1"),(13):Named(Simple(color:(0.1843137254901961,0.19607843137254902,1),normal_coef:0.5,grid:true,grid_scale:5,grid_coef:0.3,grid2:false,grid3:false),"solid_2"),(14):Named(Simple(color:(1,0.9764705882352941,0.15294117647058825),normal_coef:0.5,grid:true,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"solid_3"),(15):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(2.627450980392157e-1, 8.470588235294118e-1, 3.0196078431372547e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_green_texture"),(16):Named(Complex(code:(("MaterialProcessing result = material_simple2(hit, r, vec3(3.137254901960784e-1, 3.8823529411764707e-1, 9.254901960784314e-1), 5e-1, true, 1.0, 3e-1, false, true);\nresult.mul_to_color *= texture(texture_tex, vec2(room_size_x_u + hit.u, room_size_x_u-hit.v) / (room_size_x_u * 2.0)).rgb;\nreturn result;"))),"room_blue_texture"),(17):Named(Reflect(add_to_color:(1,1,1)),"mirror"),(18):Named(Simple(color:(0,0,0),normal_coef:0.5,grid:false,grid_scale:4,grid_coef:0.3,grid2:false,grid3:false),"solid_black"),(19):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.04732297,0.560074,0.68341726), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_blue_black"),(20):Named(Complex(code:(("MaterialProcessing result = material_simple(hit, r, vec3(0.6495146,0.2954198,0.03270938), 5e-1, false, 4e0, 3e-1);\nresult.mul_to_color *= (1.0 - portal_black_color_progress_u);\nreturn result;"))),"portal_orange_black")},storage_order:[(0),(2),(1),(3),(4),(16),(5),(15),(6),(19),(7),(20),(17),(8),(9),(10),(18),(11),(12),(13),(14)]),intersection_materials:(ids:(available:[],max:1),storage:{(0):Named(((("SceneIntersectionWithMaterial result = SceneIntersectionWithMaterial(scene_intersection_none, material_empty());\r\n\r\nRay r_b = r;\r\nRay r3;\r\nfloat len = 0.;\r\n\r\nfor (int i = 0; i < 1000; i++) { if (i >= plus_degree_u) break; // !FOR_NUMBER!\r\nfor (int i = 0; i < plus_degree_u; i++) { // !FOR_VARIABLE!\r\n    r3 = transform(b_mat_inv, r_b);\r\n    len = length(r3.d);\r\n    r3.d = normalize(r3.d);\r\n\r\n    SceneIntersection shit = sphere_picture(r3, CUSTOM_MATERIAL, false);\r\n    SurfaceIntersection hit = shit.hit;\r\n    if (hit.hit) {\r\n        hit.t /= len;\r\n    }\r\n    if (nearer(result.scene.hit, hit)) {\r\n        result.scene = shit;\r\n        vec3 blue_color = vec3(3.529411764705882e-2, 6.431372549019608e-1, 7.88235294117647e-1);\r\n        vec3 green_color = vec3(1.5478948e-1, 7.3873776e-1, 2.186588e-1);\r\n        float t = min(float(i) / 10., 1.);\r\n        vec3 color = blue_color * (1. - t) + green_color * t;\r\n        result.material = material_final(color);\r\n    }\r\n\r\n    r_b = transform(a_mat, transform(b_mat_inv, r_b));\r\n}\r\n\r\nr_b = r;\r\nlen = 0.;\r\n\r\nfor (int i = 0; i < 1000; i++) { if (i >= minus_degree_u) break; // !FOR_NUMBER!\r\nfor (int i = 0; i < minus_degree_u; i++) { // !FOR_VARIABLE!\r\n    r3 = transform(a_mat_inv, r_b);\r\n    len = length(r3.d);\r\n    r3.d = normalize(r3.d);\r\n\r\n    SceneIntersection shit = sphere_picture(r3, CUSTOM_MATERIAL, true);\r\n    SurfaceIntersection hit = shit.hit;\r\n    if (hit.hit) {\r\n        hit.t /= len;\r\n    }\r\n    if (nearer(result.scene.hit, hit)) {\r\n        result.scene = shit;\r\n        vec3 orange_color = vec3(9.294117647058824e-1, 4.235294117647059e-1, 5.0980392156862744e-2);\r\n        vec3 red_color = vec3(8.458183e-1, 7.454156e-2, 7.454156e-2);\r\n        float t = min(float(i) / 10., 1.);\r\n        vec3 color = orange_color * (1. - t) + red_color * t;\r\n        result.material = material_final(color);\r\n    }\r\n\r\n    r_b = transform(b_mat, transform(a_mat_inv, r_b));\r\n}\r\n\r\nreturn result;\r\n"))),"blue_portal")},storage_order:[(0)]),library:(ids:(available:[],max:5),storage:{(0):Named((("int is_inside_square(float x, float y, float sizex, float sizey, int material) {\n  if (abs(x) < sizex && abs(y) < sizey) {\n    return material;\n  } else {\n    return NOT_INSIDE;\n  }\n}\n")),"room"),(1):Named((("SceneIntersection intersect_box(Ray r, int material) {\nvec3 rad = vec3(4., 4., 4.);\nvec3 m = 1.0/r.d.xyz;\nvec3 n = m*r.o.xyz;\nvec3 k = abs(m)*rad;\nvec3 t1 = -n - k;\nvec3 t2 = -n + k;\n\nfloat tN = max( max( t1.x, t1.y ), t1.z );\nfloat tF = min( min( t2.x, t2.y ), t2.z );\n\nfloat t = tN;\nif (tN < 0.0 && tF > 0.0) t = tF;\n\nif(tN > tF) return scene_intersection_none;\n\nif(t < 0.0) return scene_intersection_none;\n\nvec3 oN = -sign(r.d.xyz)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n\nvec3 pos = (r.o + r.d * t).xyz;\n\nvec2 uv = vec2(pos.x, pos.y);\nif (abs(abs(pos.x) - rad.x) < 0.0001) {\n  uv = vec2(pos.y, pos.z);\n}\nif (abs(abs(pos.y) - rad.y) < 0.0001) {\n  uv = vec2(pos.x, pos.z);\n}\n\nreturn SceneIntersection(material, SurfaceIntersection(true, t, uv.x, uv.y, normalize_normal(r.d.xyz, oN)), false);\n}")),"box"),(2):Named((("bool invert_if(bool value, bool condition) {\n  if (condition) {\n    return !value;\n  } else {\n    return value;\n  }\n}")),"common"),(3):Named((("float circle_distance(float x, float y) {\n  return sqrt(sqr(x) + sqr(y));\n}\n\nfloat ellipse_distance(float x, float y) {\n  return sqrt(2.*sqr(x) + sqr(y));\n}\n\nfloat square_distance(float x, float y) {\n  return max(abs(x), abs(y));\n}\n\nfloat rect_distance(float x, float y, float a, float b) {\n  return max(abs(x)-a+1., abs(y)-b+1.);\n}\n\nfloat triangle_distance(float x, float y, float k1, float k2, float y1) {\n  return max(\n    (y-k1*x)/sqrt(1.0+sqr(k1)),\n  max(\n    (y-k2*x)/sqrt(1.0+sqr(k2)),\n    -y1 * y\n  ));\n}\n\nint is_inside_object(\r\n  float distance, \r\n  float size, \r\n  float border,\r\n  int material_inner, \r\n  int material_border\n) {\r\n  if (distance < size) return material_inner;\r\n  if (distance < size + border) return material_border;\r\n  return NOT_INSIDE;\r\n}\n\nint is_inside_portal(\n  float distance, \n  float size, \n  float border,\n  float black_border,\n  int material_first, \n  int material_second, \n  int grid_material_first, \n  int grid_material_second, \n  bool back,\n  bool first\n) {\n  int material = material_second;\n  if (first) { material = material_first; }\n\n  if (distance < size) {\n    if (back) {\n      return material;      \n    } else {\n      if (teleport_light_u == 1) {\n      \tif (mirror_u == 1) {\n          return mirror_M;\n        } else {\n          return TELEPORT;\n        }\n      } else {\n        if (first) {\n          return grid_material_first;\n        } else {\n          return grid_material_second;\n        }\n      }\n    }\n  }\n  int black_material = solid_black_M;\n  if (_black_border_disable == 1) black_material = material;\n  if (distance < size + black_border && !back) return black_material;\n  if (distance < size + black_border + border) return material;\n  if (distance < size + black_border + border + black_border) return black_material;\n\n  return NOT_INSIDE;\n}")),"portal"),(4):Named((("SceneIntersection sphere_picture(Ray r, int material, bool first) {\nfloat sign = 1.;\nif (first) sign = -1.;\n\nvec3 op = -r.o.xyz;\nfloat b = dot(op, r.d.xyz);\nfloat det = b*b - dot(op, op) + 1.0;\nif (det < 0.) return scene_intersection_none;\n\ndet = sqrt(det);\nfloat t = b - det;\n\nvec4 pos = r.o + r.d * t;\nfloat u = atan(pos.z, pos.x);\nfloat v = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\n\nfloat x = v * sin(u);\nfloat y = v * cos(u);\n\nif (t < 0. || !(\n  (abs(x) < height_u && abs(y) < width_u) || \n  (abs(abs(x) - height_u) < width_u && abs(y + sign * side_u) < side_u + width_u)\n)) t = b + det;\n\npos = r.o + r.d * t;\nu = atan(pos.z, pos.x);\nv = atan(sqrt(pos.x * pos.x + pos.z * pos.z), pos.y);\nx = v * sin(u);\ny = v * cos(u);\n\nif (t < 0. || !(\n  (abs(x) < height_u && abs(y) < width_u) || \n  (abs(abs(x) - height_u) < width_u && abs(y + sign * side_u) < side_u + width_u)\n)) return scene_intersection_none;\n\nvec3 n = normalize(pos.xyz);\nreturn SceneIntersection(material, SurfaceIntersection(true, t, u, v, n), false);\n}")),"sphere_picture")},storage_order:[(2),(0),(1),(3),(4)]),animations_filters:(uniforms:({((16)):true,((11)):false,((14)):true,((2)):false,((7)):false,((8)):false,((10)):false,((0)):false,((1)):false,((9)):false,((13)):true,((6)):false,((12)):true,((15)):true}),matrices:({((19)):false,((20)):false,((14)):true,((13)):true,((0)):false,((21)):false,((16)):false}),cameras:({})),elements_descriptions:(uniforms:({((11)):(help_description:None,overrided_name:"Side"),((12)):(help_description:None,overrided_name:"Plus degree"),((9)):(help_description:None,overrided_name:"Height"),((13)):(help_description:None,overrided_name:"Minus degree"),((14)):(help_description:None,overrided_name:"Blue x"),((16)):(help_description:None,overrided_name:"Blue rot"),((15)):(help_description:None,overrided_name:"Blue y"),((10)):(help_description:None,overrided_name:"Width")}),matrices:({((14)):(help_description:None,overrided_name:"Orange portal"),((13)):(help_description:None,overrided_name:"Blue portal")}),cameras:({})),user_uniforms:(uniforms:({((15)):false,((0)):false,((8)):false,((7)):false,((6)):false,((10)):false,((11)):false,((16)):false,((13)):false,((12)):false,((14)):false,((2)):false,((1)):false,((9)):false}),matrices:({((0)):false,((21)):false,((19)):false,((16)):false,((13)):false,((20)):false,((14)):false})),animation_stages:(ids:(available:[],max:1),storage:{(0):Named((name:(eng:"Explore",rus:"Explore"),description:None,uniforms:({((8)):FromDev,((16)):ProvidedToUser,((6)):FromDev,((1)):FromDev,((14)):ProvidedToUser,((9)):FromDev,((10)):FromDev,((2)):FromDev,((15)):ProvidedToUser,((11)):FromDev,((7)):FromDev,((0)):FromDev,((13)):ProvidedToUser,((12)):ProvidedToUser}),matrices:({((20)):FromDev,((0)):FromDev,((19)):FromDev,((13)):FromDev,((14)):FromDev,((21)):FromDev,((16)):FromDev}),original_cam_button:false,set_cam:None,cams:{},hidden:false),"Explore")},storage_order:[(0)]),current_stage:Animation(((0))),dev_stage:(uniforms:({((2)):Float((min:Some(0),max:None,value:4)),((9)):Float((min:Some(0),max:Some(0.3),value:0.15000000000000002)),((6)):Progress(0),((8)):Bool(false),((7)):Bool(true),((12)):Int((min:Some(1),max:None,value:1)),((13)):Int((min:Some(1),max:None,value:1)),((1)):Float((min:Some(0),max:None,value:4)),((10)):Float((min:Some(0),max:Some(0.02),value:0.0035)),((11)):Float((min:Some(0),max:Some(0.02),value:0.0103)),((15)):Angle(1.5707963267948966),((16)):Angle(1.5707963267948966),((14)):Angle(0.29670597283903605),((0)):Float((min:Some(0),max:None,value:4))}),matrices:({((19)):Teleport(first_portal:Some(((14))),second_portal:Some(((13))),what:Some(((14)))),((13)):Simple(offset:(0,0,0),scale:1,rotate:(1.5707963267948966,0,0),mirror:(false,false,false)),((21)):Simple(offset:(0,0,0),scale:1,rotate:(0,1.5707963267948966,1.5707963267948966),mirror:(false,false,false)),((16)):Teleport(first_portal:Some(((13))),second_portal:Some(((14))),what:Some(((14)))),((20)):Teleport(first_portal:Some(((14))),second_portal:Some(((13))),what:Some(((19)))),((0)):Simple(offset:(0,0,0),scale:1,rotate:(0,0,0),mirror:(false,false,false)),((14)):Mul(to:Some(((18))),what:Some(((17))))})),animations:(ids:(available:[],max:6),storage:{(0):Named((duration:3,animation_stage:Animation(((0))),uniforms:({((12)):CopyPrev,((13)):CopyPrev,((8)):CopyPrev,((16)):CopyPrev,((14)):CopyPrev,((1)):CopyPrev,((10)):CopyPrev,((7)):CopyPrev,((15)):CopyPrev,((6)):CopyPrev,((2)):CopyPrev,((11)):CopyPrev,((9)):CopyPrev,((0)):CopyPrev}),matrices:({((20)):CopyPrev,((13)):CopyPrev,((14)):CopyPrev,((16)):CopyPrev,((19)):CopyPrev,((0)):CopyPrev}),use_prev_cam:false,use_start_cam_as_end:false,cam_start:Some(((0))),cam_end:Some(((1))),use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:InOut),"v2.sph.0"),(1):Named((duration:2,animation_stage:Animation(((0))),uniforms:({((6)):CopyPrev,((1)):CopyPrev,((11)):CopyPrev,((13)):CopyPrev,((9)):CopyPrev,((2)):CopyPrev,((8)):CopyPrev,((16)):Changed(Some(((17)))),((14)):Changed(Some(((18)))),((7)):CopyPrev,((10)):CopyPrev,((15)):CopyPrev,((0)):CopyPrev,((12)):CopyPrev}),matrices:({((20)):CopyPrev,((16)):CopyPrev,((19)):CopyPrev,((14)):CopyPrev,((13)):CopyPrev,((0)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:true,cam_start:None,cam_end:None,use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:Linear),"v2.sph.1"),(2):Named((duration:4,animation_stage:Animation(((0))),uniforms:({((10)):CopyPrev,((6)):CopyPrev,((2)):CopyPrev,((16)):Changed(Some(((19)))),((0)):CopyPrev,((1)):CopyPrev,((11)):CopyPrev,((15)):CopyPrev,((14)):Changed(Some(((20)))),((8)):CopyPrev,((9)):CopyPrev,((13)):CopyPrev,((12)):Changed(Some(((21)))),((7)):CopyPrev}),matrices:({((20)):CopyPrev,((14)):CopyPrev,((16)):CopyPrev,((19)):CopyPrev,((0)):CopyPrev,((13)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:true,cam_start:None,cam_end:None,use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:Linear),"v2.sph.2"),(3):Named((duration:2,animation_stage:Animation(((0))),uniforms:({((11)):CopyPrev,((13)):CopyPrev,((8)):CopyPrev,((0)):CopyPrev,((2)):CopyPrev,((9)):CopyPrev,((12)):CopyPrev,((1)):CopyPrev,((10)):CopyPrev,((15)):CopyPrev,((7)):CopyPrev,((6)):CopyPrev,((14)):Changed(Some(((23)))),((16)):Changed(Some(((22))))}),matrices:({((0)):CopyPrev,((13)):CopyPrev,((16)):CopyPrev,((14)):CopyPrev,((20)):CopyPrev,((19)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:true,cam_start:None,cam_end:None,use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:Linear),"v2.sph.3"),(4):Named((duration:5,animation_stage:Animation(((0))),uniforms:({((10)):CopyPrev,((9)):CopyPrev,((12)):Changed(Some(((24)))),((7)):CopyPrev,((14)):Changed(Some(((27)))),((6)):CopyPrev,((16)):Changed(Some(((26)))),((13)):Changed(Some(((25)))),((11)):CopyPrev,((8)):CopyPrev,((1)):CopyPrev,((15)):CopyPrev,((0)):CopyPrev,((2)):CopyPrev}),matrices:({((16)):CopyPrev,((19)):CopyPrev,((0)):CopyPrev,((20)):CopyPrev,((13)):CopyPrev,((14)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:false,cam_start:None,cam_end:Some(((2))),use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:InOut),"v2.sph.4"),(5):Named((duration:3,animation_stage:RealAnimation(((4))),uniforms:({((12)):Changed(Some(((28)))),((16)):CopyPrev,((11)):CopyPrev,((15)):CopyPrev,((14)):CopyPrev,((1)):CopyPrev,((13)):Changed(Some(((29)))),((8)):CopyPrev,((9)):CopyPrev,((2)):CopyPrev,((6)):CopyPrev,((7)):CopyPrev,((10)):CopyPrev,((0)):CopyPrev}),matrices:({((0)):CopyPrev,((20)):CopyPrev,((19)):CopyPrev,((14)):CopyPrev,((13)):CopyPrev,((16)):CopyPrev}),use_prev_cam:true,use_start_cam_as_end:true,cam_start:None,cam_end:None,use_any_cam_as_start:None,use_any_cam_as_end:None,cam_any_start:None,cam_any_end:None,cam_easing:Linear),"v2.sph.5")},storage_order:[(0),(1),(2),(3),(4),(5)]),use_time:false,skybox:None)